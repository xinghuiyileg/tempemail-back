{
  "version": 3,
  "sources": ["../bundle-T88egN/checked-fetch.js", "../../../src/router.js", "../../../src/utils/cors.js", "../../../src/services/cloudflare.js", "../../../src/routes/email.js", "../../../src/routes/message.js", "../../../src/routes/monitor.js", "../../../src/middleware/admin.js", "../../../src/routes/config.js", "../../../src/middleware/auth.js", "../../../src/routes/auth.js", "../../../src/utils/codeExtractor.js", "../../../src/email-worker.js", "../../../src/index.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-T88egN/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-T88egN/middleware-loader.entry.ts"],
  "sourceRoot": "E:\\\u684C\u9762\\tempemail\\workers\\.wrangler\\tmp\\dev-smXsAB",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// \u7B80\u5355\u7684\u8DEF\u7531\u5668\u5B9E\u73B0\nexport class Router {\n  constructor() {\n    this.routes = []\n  }\n\n  use(prefix, handler) {\n    this.routes.push({ prefix, handler })\n  }\n\n  async handle(request, env, ctx) {\n    const url = new URL(request.url)\n    const path = url.pathname\n\n    for (const route of this.routes) {\n      if (path.startsWith(route.prefix)) {\n      const subPath = path.slice(route.prefix.length) || '/'\n      // Preserve original query string when rewriting the path\n      const subUrl = new URL(request.url)\n      subUrl.pathname = subPath\n      const subRequest = new Request(subUrl.toString(), request)\n\n      return await route.handler(subRequest, env, ctx)\n      }\n    }\n\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: 'Not Found'\n      }),\n      {\n        status: 404,\n        headers: { 'Content-Type': 'application/json' }\n      }\n    )\n  }\n}\n\n", "export const corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-User-ID, X-Admin-Password',\n  'Access-Control-Max-Age': '86400'\n}\n\nexport function jsonResponse(data, status = 200) {\n  return new Response(JSON.stringify(data), {\n    status,\n    headers: {\n      'Content-Type': 'application/json',\n      ...corsHeaders\n    }\n  })\n}\n\nexport function successResponse(data) {\n  return jsonResponse({\n    success: true,\n    data\n  })\n}\n\nexport function errorResponse(message, status = 400) {\n  return jsonResponse({\n    success: false,\n    error: message\n  }, status)\n}\n\n", "// Cloudflare Email Routing API \u5BA2\u6237\u7AEF\r\n\r\nexport class CloudflareEmailRouting {\r\n  constructor(apiToken, accountId, zoneId) {\r\n    this.apiToken = apiToken\r\n    this.accountId = accountId\r\n    this.zoneId = zoneId\r\n    this.baseURL = 'https://api.cloudflare.com/client/v4'\r\n  }\r\n\r\n  async createRule(emailAddress, targetEmail) {\r\n    const url = `${this.baseURL}/zones/${this.zoneId}/email/routing/rules`\r\n    \r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${this.apiToken}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        matchers: [{\r\n          type: 'literal',\r\n          field: 'to',\r\n          value: emailAddress\r\n        }],\r\n        actions: [{\r\n          type: 'forward',\r\n          value: [targetEmail]\r\n        }],\r\n        enabled: true,\r\n        name: `TempEmail: ${emailAddress}`,\r\n        priority: 0\r\n      })\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    if (!data.success) {\r\n      throw new Error(data.errors?.[0]?.message || 'Failed to create email rule')\r\n    }\r\n\r\n    return data.result\r\n  }\r\n\r\n  async deleteRule(ruleId) {\r\n    const url = `${this.baseURL}/zones/${this.zoneId}/email/routing/rules/${ruleId}`\r\n    \r\n    const response = await fetch(url, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Authorization': `Bearer ${this.apiToken}`\r\n      }\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    if (!data.success) {\r\n      throw new Error(data.errors?.[0]?.message || 'Failed to delete email rule')\r\n    }\r\n\r\n    return data.result\r\n  }\r\n\r\n  async listRules() {\r\n    const url = `${this.baseURL}/zones/${this.zoneId}/email/routing/rules`\r\n    \r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'Authorization': `Bearer ${this.apiToken}`\r\n      }\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    if (!data.success) {\r\n      throw new Error(data.errors?.[0]?.message || 'Failed to list email rules')\r\n    }\r\n\r\n    return data.result\r\n  }\r\n\r\n  async getRule(ruleId) {\r\n    const url = `${this.baseURL}/zones/${this.zoneId}/email/routing/rules/${ruleId}`\r\n    \r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'Authorization': `Bearer ${this.apiToken}`\r\n      }\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    if (!data.success) {\r\n      throw new Error(data.errors?.[0]?.message || 'Failed to get email rule')\r\n    }\r\n\r\n    return data.result\r\n  }\r\n}\r\n\r\n// \u4ECE\u73AF\u5883\u53D8\u91CF\u83B7\u53D6 Cloudflare \u5BA2\u6237\u7AEF\r\nexport function getCloudflareClient(env) {\r\n  const apiToken = env.CLOUDFLARE_API_TOKEN\r\n  const accountId = env.CLOUDFLARE_ACCOUNT_ID\r\n  const zoneId = env.CLOUDFLARE_ZONE_ID\r\n\r\n  if (!apiToken || !zoneId) {\r\n    throw new Error('Cloudflare credentials not configured')\r\n  }\r\n\r\n  return new CloudflareEmailRouting(apiToken, accountId, zoneId)\r\n}\r\n\r\n", "import { successResponse, errorResponse } from '../utils/cors'\nimport { getCloudflareClient } from '../services/cloudflare'\n\n// \u751F\u6210\u90AE\u7BB1\u5730\u5740\uFF08\u652F\u6301\u81EA\u5B9A\u4E49\u524D\u7F00\uFF09\nfunction generateEmailWithPrefix(domain, prefix) {\n  const chars = 'abcdefghijklmnopqrstuvwxyz0123456789'\n  let base = (prefix && typeof prefix === 'string' ? prefix.trim() : '') || 'temp'\n  // \u6E05\u7406\u975E\u6CD5\u5B57\u7B26\uFF0C\u53EA\u4FDD\u7559\u5B57\u6BCD\u6570\u5B57\u548C\u4E0B\u5212\u7EBF\n  base = base.toLowerCase().replace(/[^a-z0-9_]/g, '')\n  if (!base) base = 'temp'\n\n  let username = base + '_'\n  for (let i = 0; i < 10; i++) {\n    username += chars.charAt(Math.floor(Math.random() * chars.length))\n  }\n  return `${username}@${domain}`\n}\n\n// \u89E3\u6790\u57DF\u540D\u5217\u8868\nfunction parseDomains(input) {\n  if (!input) return []\n  return String(input)\n    .split(/[;,\uFF1B,]/)\n    .map(s => s.trim())\n    .filter(Boolean)\n}\n\nexport default async function emailRoutes(request, env, ctx) {\n  const url = new URL(request.url)\n  const path = url.pathname\n  const method = request.method\n\n  // POST /create - \u521B\u5EFA\u4E34\u65F6\u90AE\u7BB1\uFF08\u53EF\u5E26 prefix \u548C domain\uFF09\n  if (path === '/create' && method === 'POST') {\n    try {\n      // \u83B7\u53D6\u7528\u6237 ID\uFF08\u7528\u6237\u9694\u79BB\uFF09\n      const userId = request.headers.get('X-User-ID')\n      if (!userId) {\n        return errorResponse('Missing user ID', 400)\n      }\n\n      // \u4ECE\u914D\u7F6E\u8868\u4F18\u5148\u8BFB\u53D6\u57DF\u540D\uFF0C\u5176\u6B21\u56DE\u9000\u5230\u73AF\u5883\u53D8\u91CF\n      let configuredDomains = await getConfiguredDomains(env)\n\n      const targetEmail = env.TARGET_EMAIL || await getTargetEmail(env)\n      if (!targetEmail) {\n        return errorResponse('Target email not configured', 400)\n      }\n\n      let prefix\n      let domain\n      try {\n        const body = await request.json().catch(() => null)\n        if (body) {\n          if (body.prefix) prefix = body.prefix\n          if (body.domain) domain = String(body.domain).trim()\n        }\n      } catch (_) {}\n\n      // \u9009\u62E9\u57DF\u540D\n      if (domain && configuredDomains.includes(domain)) {\n        // use as is\n      } else {\n        domain = configuredDomains[0]\n      }\n\n      // \u751F\u6210\u90AE\u7BB1\u5730\u5740\n      const emailAddress = generateEmailWithPrefix(domain, prefix)\n\n      // \u521B\u5EFA Cloudflare Email Routing \u89C4\u5219\n      let ruleId = null\n      try {\n        const cfClient = getCloudflareClient(env)\n        const rule = await cfClient.createRule(emailAddress, targetEmail)\n        ruleId = rule.id\n      } catch (error) {\n        console.error('Failed to create Cloudflare rule:', error)\n        // \u7EE7\u7EED\u6267\u884C\uFF0C\u5C06 rule_id \u8BBE\u4E3A null\n      }\n\n      // \u4FDD\u5B58\u5230\u6570\u636E\u5E93\uFF08\u5173\u8054\u7528\u6237 ID\uFF09\n      const result = await env.DB.prepare(`\n        INSERT INTO temp_emails (user_id, email, cloudflare_rule_id, target_email, status)\n        VALUES (?, ?, ?, ?, 'active')\n      `).bind(userId, emailAddress, ruleId, targetEmail).run()\n\n      const emailId = result.meta.last_row_id\n\n      return successResponse({\n        id: emailId,\n        email: emailAddress,\n        created_at: new Date().toISOString(),\n        copied: true\n      })\n    } catch (error) {\n      console.error('Create email error:', error)\n      return errorResponse(error.message)\n    }\n  }\n\n  // GET /list - \u83B7\u53D6\u90AE\u7BB1\u5217\u8868\n  if (path === '/list' && method === 'GET') {\n    try {\n      // \u83B7\u53D6\u7528\u6237 ID\uFF08\u7528\u6237\u9694\u79BB\uFF09\n      const userId = request.headers.get('X-User-ID')\n      if (!userId) {\n        return errorResponse('Missing user ID', 400)\n      }\n\n      const page = parseInt(url.searchParams.get('page') || '1')\n      const limit = parseInt(url.searchParams.get('limit') || '5')\n      const offset = (page - 1) * limit\n\n      // \u53EA\u7EDF\u8BA1\u5F53\u524D\u7528\u6237\u7684\u90AE\u7BB1\n      const countResult = await env.DB.prepare(`\n        SELECT COUNT(*) as total FROM temp_emails \n        WHERE user_id = ? AND status = 'active'\n      `).bind(userId).first()\n      const total = countResult?.total || 0\n\n      // \u53EA\u8FD4\u56DE\u5F53\u524D\u7528\u6237\u7684\u90AE\u7BB1\n      const result = await env.DB.prepare(`\n        SELECT \n          id, \n          email, \n          created_at, \n          last_received_at,\n          message_count,\n          status\n        FROM temp_emails\n        WHERE user_id = ? AND status = 'active'\n        ORDER BY created_at DESC\n        LIMIT ? OFFSET ?\n      `).bind(userId, limit, offset).all()\n\n      return successResponse({\n        emails: result.results || [],\n        pagination: {\n          page,\n          limit,\n          total,\n          total_pages: Math.ceil(total / limit)\n        }\n      })\n    } catch (error) {\n      console.error('List emails error:', error)\n      return errorResponse(error.message)\n    }\n  }\n\n  // GET /:id/messages - \u83B7\u53D6\u67D0\u4E2A\u90AE\u7BB1\u7684\u90AE\u4EF6\u5217\u8868\n  if (path.match(/^\\/\\d+\\/messages$/) && method === 'GET') {\n    try {\n      // \u83B7\u53D6\u7528\u6237 ID\uFF08\u7528\u6237\u9694\u79BB\uFF09\n      const userId = request.headers.get('X-User-ID')\n      if (!userId) {\n        return errorResponse('Missing user ID', 400)\n      }\n\n      const emailId = parseInt(path.split('/')[1])\n      const page = parseInt(url.searchParams.get('page') || '1')\n      const limit = parseInt(url.searchParams.get('limit') || '4')\n      const offset = (page - 1) * limit\n\n      console.log('[email.js] GET /:id/messages - userId:', userId, 'emailId:', emailId, 'page:', page)\n\n      // \u9A8C\u8BC1\u90AE\u7BB1\u6240\u6709\u6743\n      const email = await env.DB.prepare(`\n        SELECT id FROM temp_emails WHERE id = ? AND user_id = ?\n      `).bind(emailId, userId).first()\n\n      if (!email) {\n        return errorResponse('Email not found or access denied', 404)\n      }\n\n      // \u7EDF\u8BA1\u603B\u6570\n      const countResult = await env.DB.prepare(`\n        SELECT COUNT(*) as total FROM messages WHERE temp_email_id = ?\n      `).bind(emailId).first()\n\n      const total = countResult?.total || 0\n\n      // \u83B7\u53D6\u90AE\u4EF6\u5217\u8868\n      const result = await env.DB.prepare(`\n        SELECT \n          id,\n          sender,\n          subject,\n          body_text,\n          verification_code,\n          received_at,\n          is_read,\n          created_at\n        FROM messages\n        WHERE temp_email_id = ?\n        ORDER BY received_at DESC\n        LIMIT ? OFFSET ?\n      `).bind(emailId, limit, offset).all()\n\n      console.log('[email.js] Returning page:', page, 'results:', result.results?.length)\n\n      return successResponse({\n        messages: result.results || [],\n        pagination: {\n          page: page,  // \u660E\u786E\u8FD4\u56DE\u8BF7\u6C42\u7684\u9875\u7801\n          limit: limit,\n          total: total,\n          total_pages: Math.ceil(total / limit)\n        }\n      })\n    } catch (error) {\n      console.error('List messages by email error:', error)\n      return errorResponse(error.message)\n    }\n  }\n\n  // DELETE /:id - \u5220\u9664\u90AE\u7BB1\n  if (path.match(/^\\/\\d+$/) && method === 'DELETE') {\n    try {\n      // \u83B7\u53D6\u7528\u6237 ID\uFF08\u7528\u6237\u9694\u79BB\uFF09\n      const userId = request.headers.get('X-User-ID')\n      if (!userId) {\n        return errorResponse('Missing user ID', 400)\n      }\n\n      const id = parseInt(path.slice(1))\n\n      // \u83B7\u53D6\u90AE\u7BB1\u4FE1\u606F\u5E76\u9A8C\u8BC1\u6240\u6709\u6743\n      const email = await env.DB.prepare(`\n        SELECT * FROM temp_emails WHERE id = ? AND user_id = ?\n      `).bind(id, userId).first()\n\n      if (!email) {\n        return errorResponse('Email not found or access denied', 404)\n      }\n\n      // \u5220\u9664 Cloudflare \u89C4\u5219\n      if (email.cloudflare_rule_id) {\n        try {\n          const cfClient = getCloudflareClient(env)\n          await cfClient.deleteRule(email.cloudflare_rule_id)\n        } catch (error) {\n          console.error('Failed to delete Cloudflare rule:', error)\n        }\n      }\n\n      // \u5220\u9664\u6570\u636E\u5E93\u8BB0\u5F55\n      await env.DB.prepare(`\n        DELETE FROM temp_emails WHERE id = ?\n      `).bind(id).run()\n\n      // \u5220\u9664\u76F8\u5173\u90AE\u4EF6\n      await env.DB.prepare(`\n        DELETE FROM messages WHERE temp_email_id = ?\n      `).bind(id).run()\n\n      return successResponse({ deleted: true })\n    } catch (error) {\n      console.error('Delete email error:', error)\n      return errorResponse(error.message)\n    }\n  }\n\n  // POST /batch-delete - \u6279\u91CF\u5220\u9664\n  if (path === '/batch-delete' && method === 'POST') {\n    try {\n      // \u83B7\u53D6\u7528\u6237 ID\uFF08\u7528\u6237\u9694\u79BB\uFF09\n      const userId = request.headers.get('X-User-ID')\n      if (!userId) {\n        return errorResponse('Missing user ID', 400)\n      }\n\n      const body = await request.json()\n      const ids = body.ids || []\n\n      if (!Array.isArray(ids) || ids.length === 0) {\n        return errorResponse('Invalid ids parameter', 400)\n      }\n\n      let deletedCount = 0\n\n      for (const id of ids) {\n        try {\n          // \u83B7\u53D6\u90AE\u7BB1\u4FE1\u606F\u5E76\u9A8C\u8BC1\u6240\u6709\u6743\n          const email = await env.DB.prepare(`\n            SELECT * FROM temp_emails WHERE id = ? AND user_id = ?\n          `).bind(id, userId).first()\n\n          if (email) {\n            // \u5220\u9664 Cloudflare \u89C4\u5219\n            if (email.cloudflare_rule_id) {\n              try {\n                const cfClient = getCloudflareClient(env)\n                await cfClient.deleteRule(email.cloudflare_rule_id)\n              } catch (error) {\n                console.error('Failed to delete Cloudflare rule:', error)\n              }\n            }\n\n            // \u5220\u9664\u6570\u636E\u5E93\u8BB0\u5F55\n            await env.DB.prepare(`\n              DELETE FROM temp_emails WHERE id = ?\n            `).bind(id).run()\n\n            await env.DB.prepare(`\n              DELETE FROM messages WHERE temp_email_id = ?\n            `).bind(id).run()\n\n            deletedCount++\n          }\n        } catch (error) {\n          console.error(`Failed to delete email ${id}:`, error)\n        }\n      }\n\n      return successResponse({ deleted_count: deletedCount })\n    } catch (error) {\n      console.error('Batch delete error:', error)\n      return errorResponse(error.message)\n    }\n  }\n\n  return errorResponse('Not found', 404)\n}\n\n// \u4ECE\u914D\u7F6E\u4E2D\u83B7\u53D6\u76EE\u6807\u90AE\u7BB1\nasync function getTargetEmail(env) {\n  try {\n    const config = await env.DB.prepare(`\n      SELECT config_value FROM config WHERE config_key = 'target_qq_email'\n    `).first()\n    \n    return config?.config_value || null\n  } catch (error) {\n    console.error('Failed to get target email:', error)\n    return null\n  }\n}\n\n// \u4ECE\u914D\u7F6E\u4E2D\u83B7\u53D6\u57DF\u540D\u5217\u8868\uFF08\u4F18\u5148 DB\uFF0C\u5176\u6B21 ENV\uFF09\nasync function getConfiguredDomains(env) {\n  try {\n    const row = await env.DB.prepare(`\n      SELECT config_value FROM config WHERE config_key = 'domain_name'\n    `).first()\n    const fromDb = row?.config_value\n    let list = parseDomains(fromDb || env.DOMAIN_NAME || 'yourdomain.com')\n    if (list.length === 0) list = ['yourdomain.com']\n    return list\n  } catch (e) {\n    let list = parseDomains(env.DOMAIN_NAME || 'yourdomain.com')\n    if (list.length === 0) list = ['yourdomain.com']\n    return list\n  }\n}\n\n", "import { successResponse, errorResponse } from '../utils/cors'\n\nexport default async function messageRoutes(request, env, ctx) {\n  const url = new URL(request.url)\n  const path = url.pathname\n  const method = request.method\n\n  // GET /emails/:id/messages - \u83B7\u53D6\u90AE\u4EF6\u5217\u8868\n  if (path.match(/^\\/emails\\/\\d+\\/messages$/) && method === 'GET') {\n    try {\n      // \u83B7\u53D6\u7528\u6237 ID\uFF08\u7528\u6237\u9694\u79BB\uFF09\n      const userId = request.headers.get('X-User-ID')\n      if (!userId) {\n        return errorResponse('Missing user ID', 400)\n      }\n\n      const emailId = parseInt(path.split('/')[2])\n      const page = parseInt(url.searchParams.get('page') || '1')\n      const limit = parseInt(url.searchParams.get('limit') || '4')\n      const offset = (page - 1) * limit\n\n      // \u9A8C\u8BC1\u90AE\u7BB1\u6240\u6709\u6743\n      const email = await env.DB.prepare(`\n        SELECT id FROM temp_emails WHERE id = ? AND user_id = ?\n      `).bind(emailId, userId).first()\n\n      if (!email) {\n        return errorResponse('Email not found or access denied', 404)\n      }\n\n      // \u83B7\u53D6\u603B\u6570\n      const countResult = await env.DB.prepare(`\n        SELECT COUNT(*) as total FROM messages WHERE temp_email_id = ?\n      `).bind(emailId).first()\n\n      const total = countResult?.total || 0\n\n      // \u83B7\u53D6\u90AE\u4EF6\u5217\u8868\n      const result = await env.DB.prepare(`\n        SELECT \n          id,\n          sender,\n          subject,\n          body_text,\n          body_html,\n          verification_code,\n          received_at,\n          is_read,\n          created_at\n        FROM messages\n        WHERE temp_email_id = ?\n        ORDER BY received_at DESC\n        LIMIT ? OFFSET ?\n      `).bind(emailId, limit, offset).all()\n\n      return successResponse({\n        messages: result.results || [],\n        pagination: {\n          page,\n          limit,\n          total,\n          total_pages: Math.ceil(total / limit)\n        }\n      })\n    } catch (error) {\n      console.error('List messages error:', error)\n      return errorResponse(error.message)\n    }\n  }\n\n  // GET /:id - \u83B7\u53D6\u90AE\u4EF6\u8BE6\u60C5\n  if (path.match(/^\\/\\d+$/) && method === 'GET') {\n    try {\n      // \u83B7\u53D6\u7528\u6237 ID\uFF08\u7528\u6237\u9694\u79BB\uFF09\n      const userId = request.headers.get('X-User-ID')\n      if (!userId) {\n        return errorResponse('Missing user ID', 400)\n      }\n\n      const id = parseInt(path.slice(1))\n\n      // \u901A\u8FC7 JOIN \u9A8C\u8BC1\u90AE\u4EF6\u6240\u5C5E\u7684\u90AE\u7BB1\u662F\u5426\u5C5E\u4E8E\u5F53\u524D\u7528\u6237\n      const message = await env.DB.prepare(`\n        SELECT m.* \n        FROM messages m\n        INNER JOIN temp_emails e ON m.temp_email_id = e.id\n        WHERE m.id = ? AND e.user_id = ?\n      `).bind(id, userId).first()\n\n      if (!message) {\n        return errorResponse('Message not found or access denied', 404)\n      }\n\n      return successResponse(message)\n    } catch (error) {\n      console.error('Get message error:', error)\n      return errorResponse(error.message)\n    }\n  }\n\n  // PUT /:id/read - \u6807\u8BB0\u4E3A\u5DF2\u8BFB\n  if (path.match(/^\\/\\d+\\/read$/) && method === 'PUT') {\n    try {\n      // \u83B7\u53D6\u7528\u6237 ID\uFF08\u7528\u6237\u9694\u79BB\uFF09\n      const userId = request.headers.get('X-User-ID')\n      if (!userId) {\n        return errorResponse('Missing user ID', 400)\n      }\n\n      const id = parseInt(path.split('/')[1])\n\n      // \u9A8C\u8BC1\u6240\u6709\u6743\u540E\u518D\u66F4\u65B0\n      const message = await env.DB.prepare(`\n        SELECT m.id\n        FROM messages m\n        INNER JOIN temp_emails e ON m.temp_email_id = e.id\n        WHERE m.id = ? AND e.user_id = ?\n      `).bind(id, userId).first()\n\n      if (!message) {\n        return errorResponse('Message not found or access denied', 404)\n      }\n\n      await env.DB.prepare(`\n        UPDATE messages SET is_read = 1 WHERE id = ?\n      `).bind(id).run()\n\n      return successResponse({ updated: true })\n    } catch (error) {\n      console.error('Mark as read error:', error)\n      return errorResponse(error.message)\n    }\n  }\n\n  // DELETE /:id - \u5220\u9664\u5355\u5C01\u90AE\u4EF6\n  if (path.match(/^\\/\\d+$/) && method === 'DELETE') {\n    try {\n      // \u83B7\u53D6\u7528\u6237 ID\uFF08\u7528\u6237\u9694\u79BB\uFF09\n      const userId = request.headers.get('X-User-ID')\n      if (!userId) {\n        return errorResponse('Missing user ID', 400)\n      }\n\n      const id = parseInt(path.slice(1))\n\n      // \u9A8C\u8BC1\u6240\u6709\u6743\u5E76\u83B7\u53D6\u90AE\u7BB1 ID\n      const msg = await env.DB.prepare(`\n        SELECT m.temp_email_id\n        FROM messages m\n        INNER JOIN temp_emails e ON m.temp_email_id = e.id\n        WHERE m.id = ? AND e.user_id = ?\n      `).bind(id, userId).first()\n\n      if (!msg) {\n        return errorResponse('Message not found or access denied', 404)\n      }\n\n      await env.DB.prepare(`\n        DELETE FROM messages WHERE id = ?\n      `).bind(id).run()\n\n      if (msg.temp_email_id) {\n        // \u66F4\u65B0\u90AE\u7BB1\u7684 message_count\uFF08\u9632\u6B62\u8D1F\u6570\uFF09\n        await env.DB.prepare(`\n          UPDATE temp_emails\n          SET message_count = CASE WHEN message_count > 0 THEN message_count - 1 ELSE 0 END\n          WHERE id = ?\n        `).bind(msg.temp_email_id).run()\n      }\n\n      return successResponse({ deleted: true })\n    } catch (error) {\n      console.error('Delete message error:', error)\n      return errorResponse(error.message)\n    }\n  }\n\n  // DELETE /emails/:emailId/messages - \u6E05\u7A7A\u67D0\u90AE\u7BB1\u6240\u6709\u90AE\u4EF6\n  if (path.match(/^\\/emails\\/\\d+\\/messages$/) && method === 'DELETE') {\n    try {\n      // \u83B7\u53D6\u7528\u6237 ID\uFF08\u7528\u6237\u9694\u79BB\uFF09\n      const userId = request.headers.get('X-User-ID')\n      if (!userId) {\n        return errorResponse('Missing user ID', 400)\n      }\n\n      const emailId = parseInt(path.split('/')[2])\n\n      // \u9A8C\u8BC1\u90AE\u7BB1\u6240\u6709\u6743\n      const email = await env.DB.prepare(`\n        SELECT id FROM temp_emails WHERE id = ? AND user_id = ?\n      `).bind(emailId, userId).first()\n\n      if (!email) {\n        return errorResponse('Email not found or access denied', 404)\n      }\n\n      await env.DB.prepare(`DELETE FROM messages WHERE temp_email_id = ?`).bind(emailId).run()\n      // \u540C\u6B65\u66F4\u65B0\u8BA1\u6570\n      await env.DB.prepare(`UPDATE temp_emails SET message_count = 0 WHERE id = ?`).bind(emailId).run()\n      return successResponse({ cleared: true })\n    } catch (error) {\n      console.error('Clear messages error:', error)\n      return errorResponse(error.message)\n    }\n  }\n\n  return errorResponse('Not found', 404)\n}\n\n", "import { successResponse, errorResponse } from '../utils/cors'\r\n\r\nexport default async function monitorRoutes(request, env, ctx) {\r\n  const url = new URL(request.url)\r\n  const path = url.pathname\r\n  const method = request.method\r\n\r\n  // GET /status - \u83B7\u53D6\u76D1\u63A7\u72B6\u6001\r\n  if (path === '/status' && method === 'GET') {\r\n    try {\r\n      // \u83B7\u53D6\u7528\u6237 ID\uFF08\u7528\u6237\u9694\u79BB\uFF09\r\n      const userId = request.headers.get('X-User-ID')\r\n      if (!userId) {\r\n        return errorResponse('Missing user ID', 400)\r\n      }\r\n\r\n      // \u83B7\u53D6\u76D1\u63A7\u72B6\u6001\u914D\u7F6E\r\n      const statusConfig = await env.DB.prepare(`\r\n        SELECT config_value FROM config WHERE config_key = 'monitor_status'\r\n      `).first()\r\n\r\n      const lastCheckConfig = await env.DB.prepare(`\r\n        SELECT config_value FROM config WHERE config_key = 'last_check_time'\r\n      `).first()\r\n\r\n      // \u7EDF\u8BA1\u6570\u636E\uFF08\u4EC5\u7EDF\u8BA1\u5F53\u524D\u7528\u6237\u7684\u6570\u636E\uFF09\r\n      const emailCount = await env.DB.prepare(`\r\n        SELECT COUNT(*) as count FROM temp_emails \r\n        WHERE user_id = ? AND status = 'active'\r\n      `).bind(userId).first()\r\n\r\n      const messageCount = await env.DB.prepare(`\r\n        SELECT COUNT(*) as count FROM messages m\r\n        INNER JOIN temp_emails e ON m.temp_email_id = e.id\r\n        WHERE e.user_id = ?\r\n      `).bind(userId).first()\r\n\r\n      const codeCount = await env.DB.prepare(`\r\n        SELECT COUNT(*) as count FROM messages m\r\n        INNER JOIN temp_emails e ON m.temp_email_id = e.id\r\n        WHERE e.user_id = ? AND m.verification_code IS NOT NULL\r\n      `).bind(userId).first()\r\n\r\n      return successResponse({\r\n        status: statusConfig?.config_value || 'stopped',\r\n        last_check_at: lastCheckConfig?.config_value || null,\r\n        total_emails: emailCount?.count || 0,\r\n        total_messages: messageCount?.count || 0,\r\n        verification_codes_extracted: codeCount?.count || 0\r\n      })\r\n    } catch (error) {\r\n      console.error('Get monitor status error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  // POST /toggle - \u542F\u52A8/\u505C\u6B62\u76D1\u63A7\r\n  if (path === '/toggle' && method === 'POST') {\r\n    try {\r\n      const body = await request.json()\r\n      const action = body.action // 'start' or 'stop'\r\n\r\n      if (!['start', 'stop'].includes(action)) {\r\n        return errorResponse('Invalid action. Must be \"start\" or \"stop\"', 400)\r\n      }\r\n\r\n      const newStatus = action === 'start' ? 'running' : 'stopped'\r\n\r\n      // \u66F4\u65B0\u914D\u7F6E\r\n      await env.DB.prepare(`\r\n        INSERT OR REPLACE INTO config (config_key, config_value, updated_at)\r\n        VALUES ('monitor_status', ?, datetime('now'))\r\n      `).bind(newStatus).run()\r\n\r\n      if (action === 'start') {\r\n        // \u66F4\u65B0\u6700\u540E\u68C0\u67E5\u65F6\u95F4\r\n        await env.DB.prepare(`\r\n          INSERT OR REPLACE INTO config (config_key, config_value, updated_at)\r\n          VALUES ('last_check_time', ?, datetime('now'))\r\n        `).bind(new Date().toISOString()).run()\r\n      }\r\n\r\n      return successResponse({\r\n        status: newStatus\r\n      })\r\n    } catch (error) {\r\n      console.error('Toggle monitor error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  return errorResponse('Not found', 404)\r\n}\r\n\r\n", "/**\r\n * \u7BA1\u7406\u5458\u6743\u9650\u4E2D\u95F4\u4EF6\r\n * \u7528\u4E8E\u4FDD\u62A4\u7CFB\u7EDF\u914D\u7F6E\u7B49\u654F\u611F\u64CD\u4F5C\r\n */\r\n\r\nimport { errorResponse } from '../utils/cors'\r\n\r\n/**\r\n * \u68C0\u67E5\u662F\u5426\u4E3A\u7BA1\u7406\u5458\r\n * @param {Request} request - \u8BF7\u6C42\u5BF9\u8C61\r\n * @param {Object} env - \u73AF\u5883\u53D8\u91CF\r\n * @returns {Response|null} - \u5982\u679C\u9A8C\u8BC1\u5931\u8D25\u8FD4\u56DE\u9519\u8BEF\u54CD\u5E94\uFF0C\u6210\u529F\u8FD4\u56DE null\r\n */\r\nexport function requireAdmin(request, env) {\r\n  const adminPassword = env.ADMIN_PASSWORD\r\n  \r\n  // \u5982\u679C\u672A\u8BBE\u7F6E\u7BA1\u7406\u5458\u5BC6\u7801\uFF0C\u62D2\u7EDD\u8BBF\u95EE\uFF08\u5B89\u5168\u9ED8\u8BA4\uFF09\r\n  if (!adminPassword) {\r\n    return errorResponse('Admin access not configured. Please set ADMIN_PASSWORD.', 403)\r\n  }\r\n  \r\n  // \u83B7\u53D6 X-Admin-Password \u8BF7\u6C42\u5934\r\n  const adminAuth = request.headers.get('X-Admin-Password')\r\n  \r\n  if (!adminAuth) {\r\n    return errorResponse('Admin authentication required', 401)\r\n  }\r\n  \r\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u5BC6\u7801\r\n  if (adminAuth !== adminPassword) {\r\n    console.warn('Invalid admin password attempt')\r\n    return errorResponse('Invalid admin password', 403)\r\n  }\r\n  \r\n  // \u9A8C\u8BC1\u901A\u8FC7\r\n  console.log('Admin authenticated successfully')\r\n  return null\r\n}\r\n\r\n/**\r\n * \u68C0\u67E5\u662F\u5426\u542F\u7528\u4E86\u7BA1\u7406\u5458\u6743\u9650\r\n * @param {Object} env - \u73AF\u5883\u53D8\u91CF\r\n * @returns {boolean}\r\n */\r\nexport function isAdminEnabled(env) {\r\n  return !!env.ADMIN_PASSWORD\r\n}\r\n\r\n/**\r\n * \u68C0\u67E5\u5F53\u524D\u8BF7\u6C42\u662F\u5426\u5177\u6709\u7BA1\u7406\u5458\u6743\u9650\uFF08\u4E0D\u8FD4\u56DE\u9519\u8BEF\uFF0C\u53EA\u8FD4\u56DE\u5E03\u5C14\u503C\uFF09\r\n * @param {Request} request - \u8BF7\u6C42\u5BF9\u8C61\r\n * @param {Object} env - \u73AF\u5883\u53D8\u91CF\r\n * @returns {boolean}\r\n */\r\nexport function hasAdminAccess(request, env) {\r\n  const adminPassword = env.ADMIN_PASSWORD\r\n  if (!adminPassword) return false\r\n  \r\n  const adminAuth = request.headers.get('X-Admin-Password')\r\n  return adminAuth === adminPassword\r\n}\r\n\r\n", "import { successResponse, errorResponse } from '../utils/cors'\r\nimport { requireAdmin, hasAdminAccess, isAdminEnabled } from '../middleware/admin'\r\n\r\nexport default async function configRoutes(request, env, ctx) {\r\n  const url = new URL(request.url)\r\n  const path = url.pathname\r\n  const method = request.method\r\n\r\n  // GET / - \u83B7\u53D6\u914D\u7F6E\r\n  if (path === '/' && method === 'GET') {\r\n    try {\r\n      const configs = await env.DB.prepare(`\r\n        SELECT config_key, config_value FROM config\r\n      `).all()\r\n\r\n      const configMap = {}\r\n      const isAdmin = hasAdminAccess(request, env) // \u68C0\u67E5\u662F\u5426\u4E3A\u7BA1\u7406\u5458\r\n      \r\n      for (const config of configs.results || []) {\r\n        const key = config.config_key\r\n        let value = config.config_value\r\n        \r\n        // \u975E\u7BA1\u7406\u5458\u8BBF\u95EE\u65F6\uFF0C\u654F\u611F\u4FE1\u606F\u8131\u654F\r\n        if (!isAdmin) {\r\n          if (key.includes('password') || key.includes('token')) {\r\n            value = value ? '***' : ''\r\n          } else if (key.includes('account_id') || key.includes('zone_id')) {\r\n            value = value ? value.substring(0, 8) + '***' : ''\r\n          } else if (key === 'target_qq_email') {\r\n            // \u90E8\u5206\u9690\u85CF\u90AE\u7BB1\r\n            const email = value || ''\r\n            const parts = email.split('@')\r\n            if (parts.length === 2) {\r\n              const username = parts[0]\r\n              const masked = username.length > 3 ? username.substring(0, 3) + '***' : '***'\r\n              value = masked + '@' + parts[1]\r\n            }\r\n          }\r\n        }\r\n        \r\n        configMap[key] = value\r\n      }\r\n\r\n      return successResponse({\r\n        config: configMap,\r\n        isAdmin,\r\n        adminEnabled: isAdminEnabled(env)\r\n      })\r\n    } catch (error) {\r\n      console.error('Get config error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  // PUT / - \u66F4\u65B0\u914D\u7F6E\uFF08\u4EC5\u7BA1\u7406\u5458\uFF09\r\n  if (path === '/' && method === 'PUT') {\r\n    // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\r\n    const adminError = requireAdmin(request, env)\r\n    if (adminError) {\r\n      return adminError\r\n    }\r\n\r\n    try {\r\n      const body = await request.json()\r\n\r\n      // \u5141\u8BB8\u66F4\u65B0\u7684\u914D\u7F6E\u9879\r\n      const allowedKeys = [\r\n        'cloudflare_api_token',\r\n        'cloudflare_account_id',\r\n        'cloudflare_zone_id',\r\n        'domain_name',\r\n        'target_qq_email',\r\n        'qq_imap_password',\r\n        'monitor_interval',\r\n        'auto_delete_days'\r\n      ]\r\n\r\n      let updatedCount = 0\r\n      for (const [key, value] of Object.entries(body)) {\r\n        if (allowedKeys.includes(key)) {\r\n          await env.DB.prepare(`\r\n            INSERT OR REPLACE INTO config (config_key, config_value, updated_at)\r\n            VALUES (?, ?, datetime('now'))\r\n          `).bind(key, value).run()\r\n          updatedCount++\r\n        }\r\n      }\r\n\r\n      console.log(`Admin updated ${updatedCount} config items`)\r\n      return successResponse({ \r\n        updated: true,\r\n        count: updatedCount\r\n      })\r\n    } catch (error) {\r\n      console.error('Update config error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  // POST / - \u66F4\u65B0\u914D\u7F6E\uFF08\u517C\u5BB9 POST \u65B9\u6CD5\uFF09\r\n  if (path === '/' && method === 'POST') {\r\n    // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\r\n    const adminError = requireAdmin(request, env)\r\n    if (adminError) {\r\n      return adminError\r\n    }\r\n\r\n    try {\r\n      const body = await request.json()\r\n\r\n      // \u5141\u8BB8\u66F4\u65B0\u7684\u914D\u7F6E\u9879\r\n      const allowedKeys = [\r\n        'cloudflare_api_token',\r\n        'cloudflare_account_id',\r\n        'cloudflare_zone_id',\r\n        'domain_name',\r\n        'target_qq_email',\r\n        'qq_imap_password',\r\n        'monitor_interval',\r\n        'auto_delete_days'\r\n      ]\r\n\r\n      let updatedCount = 0\r\n      for (const [key, value] of Object.entries(body)) {\r\n        if (allowedKeys.includes(key)) {\r\n          await env.DB.prepare(`\r\n            INSERT OR REPLACE INTO config (config_key, config_value, updated_at)\r\n            VALUES (?, ?, datetime('now'))\r\n          `).bind(key, value).run()\r\n          updatedCount++\r\n        }\r\n      }\r\n\r\n      console.log(`Admin updated ${updatedCount} config items`)\r\n      return successResponse({ \r\n        updated: true,\r\n        count: updatedCount\r\n      })\r\n    } catch (error) {\r\n      console.error('Update config error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  return errorResponse('Not found', 404)\r\n}\r\n\r\n", "/**\r\n * \u8BBF\u95EE\u63A7\u5236\u4E2D\u95F4\u4EF6\r\n * \u63D0\u4F9B\u7B80\u5355\u7684\u5BC6\u7801\u4FDD\u62A4\u529F\u80FD\r\n */\r\n\r\nimport { errorResponse } from '../utils/cors.js'\r\n\r\n/**\r\n * \u9A8C\u8BC1\u8BBF\u95EE\u4EE4\u724C\r\n * @param {Request} request - \u8BF7\u6C42\u5BF9\u8C61\r\n * @param {Object} env - \u73AF\u5883\u53D8\u91CF\r\n * @returns {boolean} - \u662F\u5426\u901A\u8FC7\u9A8C\u8BC1\r\n */\r\nexport function verifyAuth(request, env) {\r\n  // \u4ECE\u914D\u7F6E\u83B7\u53D6\u8BBF\u95EE\u5BC6\u7801\r\n  const configPassword = env.ACCESS_PASSWORD\r\n  \r\n  // \u5982\u679C\u672A\u914D\u7F6E\u5BC6\u7801\uFF0C\u5219\u4E0D\u9700\u8981\u8BA4\u8BC1\r\n  if (!configPassword || configPassword === '') {\r\n    return true\r\n  }\r\n  \r\n  // \u4ECE\u8BF7\u6C42\u5934\u83B7\u53D6\u4EE4\u724C\r\n  const authHeader = request.headers.get('Authorization')\r\n  \r\n  if (!authHeader) {\r\n    return false\r\n  }\r\n  \r\n  // \u652F\u6301 Bearer Token \u683C\u5F0F\r\n  const token = authHeader.replace(/^Bearer\\s+/i, '')\r\n  \r\n  // \u7B80\u5355\u7684\u5BC6\u7801\u6BD4\u5BF9\r\n  return token === configPassword\r\n}\r\n\r\n/**\r\n * \u68C0\u67E5\u8BA4\u8BC1\u5E76\u8FD4\u56DE\u9519\u8BEF\u54CD\u5E94\r\n * @param {Request} request - \u8BF7\u6C42\u5BF9\u8C61\r\n * @param {Object} env - \u73AF\u5883\u53D8\u91CF\r\n * @returns {Response|null} - \u5982\u679C\u8BA4\u8BC1\u5931\u8D25\u8FD4\u56DE\u9519\u8BEF\u54CD\u5E94\uFF0C\u5426\u5219\u8FD4\u56DE null\r\n */\r\nexport function requireAuth(request, env) {\r\n  if (!verifyAuth(request, env)) {\r\n    return errorResponse('Unauthorized', 401, {\r\n      'WWW-Authenticate': 'Bearer realm=\"Temp Email System\"'\r\n    })\r\n  }\r\n  return null\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u8BBF\u95EE\u4EE4\u724C\uFF08\u7528\u4E8E\u767B\u5F55\uFF09\r\n * @param {string} password - \u7528\u6237\u8F93\u5165\u7684\u5BC6\u7801\r\n * @param {Object} env - \u73AF\u5883\u53D8\u91CF\r\n * @returns {Object} - \u5305\u542B\u4EE4\u724C\u548C\u8FC7\u671F\u65F6\u95F4\u7684\u5BF9\u8C61\r\n */\r\nexport function generateToken(password, env) {\r\n  const configPassword = env.ACCESS_PASSWORD\r\n  \r\n  if (!configPassword || password !== configPassword) {\r\n    return null\r\n  }\r\n  \r\n  // \u7B80\u5355\u5B9E\u73B0\uFF1A\u76F4\u63A5\u8FD4\u56DE\u5BC6\u7801\u4F5C\u4E3A\u4EE4\u724C\r\n  // \u751F\u4EA7\u73AF\u5883\u5EFA\u8BAE\u4F7F\u7528 JWT \u6216\u5176\u4ED6\u52A0\u5BC6\u4EE4\u724C\r\n  return {\r\n    token: password,\r\n    expiresIn: 86400 // 24\u5C0F\u65F6\uFF08\u79D2\uFF09\r\n  }\r\n}\r\n\r\n/**\r\n * \u9A8C\u8BC1\u662F\u5426\u9700\u8981\u8BA4\u8BC1\r\n * @param {Object} env - \u73AF\u5883\u53D8\u91CF\r\n * @returns {boolean} - \u662F\u5426\u542F\u7528\u4E86\u8BBF\u95EE\u63A7\u5236\r\n */\r\nexport function isAuthEnabled(env) {\r\n  return !!(env.ACCESS_PASSWORD && env.ACCESS_PASSWORD !== '')\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u516C\u5F00\u8DEF\u5F84\u5217\u8868\uFF08\u65E0\u9700\u8BA4\u8BC1\u7684\u8DEF\u5F84\uFF09\r\n * @returns {Array<string>} - \u516C\u5F00\u8DEF\u5F84\u6570\u7EC4\r\n */\r\nexport function getPublicPaths() {\r\n  return [\r\n    '/api/auth/check',\r\n    '/api/auth/login',\r\n    '/health',\r\n    '/',\r\n    '/ws' // WebSocket \u8FDE\u63A5\u9700\u8981\u5355\u72EC\u9A8C\u8BC1\r\n  ]\r\n}\r\n\r\n/**\r\n * \u68C0\u67E5\u8DEF\u5F84\u662F\u5426\u9700\u8981\u8BA4\u8BC1\r\n * @param {string} path - \u8BF7\u6C42\u8DEF\u5F84\r\n * @returns {boolean} - \u662F\u5426\u9700\u8981\u8BA4\u8BC1\r\n */\r\nexport function requiresAuth(path) {\r\n  const publicPaths = getPublicPaths()\r\n  return !publicPaths.some(publicPath => {\r\n    if (publicPath === path) return true\r\n    if (publicPath.endsWith('*')) {\r\n      const prefix = publicPath.slice(0, -1)\r\n      return path.startsWith(prefix)\r\n    }\r\n    return false\r\n  })\r\n}\r\n\r\n", "/**\r\n * \u8BA4\u8BC1\u76F8\u5173 API \u8DEF\u7531\r\n */\r\n\r\nimport { successResponse, errorResponse } from '../utils/cors.js'\r\nimport { generateToken, isAuthEnabled } from '../middleware/auth.js'\r\n\r\nexport default async function authRoutes(request, env, ctx) {\r\n  const url = new URL(request.url)\r\n  const path = url.pathname.replace('/api/auth', '')\r\n  const method = request.method\r\n\r\n  // GET /check - \u68C0\u67E5\u662F\u5426\u542F\u7528\u4E86\u8BBF\u95EE\u63A7\u5236\r\n  if (path === '/check' && method === 'GET') {\r\n    return successResponse({\r\n      enabled: isAuthEnabled(env),\r\n      message: isAuthEnabled(env) ? '\u8BBF\u95EE\u63A7\u5236\u5DF2\u542F\u7528' : '\u8BBF\u95EE\u63A7\u5236\u672A\u542F\u7528'\r\n    })\r\n  }\r\n\r\n  // POST /login - \u767B\u5F55\u83B7\u53D6\u4EE4\u724C\r\n  if (path === '/login' && method === 'POST') {\r\n    try {\r\n      const { password } = await request.json()\r\n\r\n      if (!password) {\r\n        return errorResponse('\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A', 400)\r\n      }\r\n\r\n      // \u9A8C\u8BC1\u5BC6\u7801\u5E76\u751F\u6210\u4EE4\u724C\r\n      const tokenData = generateToken(password, env)\r\n\r\n      if (!tokenData) {\r\n        return errorResponse('\u5BC6\u7801\u9519\u8BEF', 401)\r\n      }\r\n\r\n      return successResponse({\r\n        token: tokenData.token,\r\n        expiresIn: tokenData.expiresIn,\r\n        message: '\u767B\u5F55\u6210\u529F'\r\n      })\r\n    } catch (error) {\r\n      console.error('Login error:', error)\r\n      return errorResponse('\u767B\u5F55\u5931\u8D25', 500)\r\n    }\r\n  }\r\n\r\n  // POST /verify - \u9A8C\u8BC1\u4EE4\u724C\u6709\u6548\u6027\r\n  if (path === '/verify' && method === 'POST') {\r\n    try {\r\n      const { token } = await request.json()\r\n\r\n      if (!token) {\r\n        return errorResponse('\u4EE4\u724C\u4E0D\u80FD\u4E3A\u7A7A', 400)\r\n      }\r\n\r\n      // \u7B80\u5355\u9A8C\u8BC1\u4EE4\u724C\r\n      const configPassword = env.ACCESS_PASSWORD\r\n      const isValid = token === configPassword\r\n\r\n      return successResponse({\r\n        valid: isValid,\r\n        message: isValid ? '\u4EE4\u724C\u6709\u6548' : '\u4EE4\u724C\u65E0\u6548'\r\n      })\r\n    } catch (error) {\r\n      console.error('Verify error:', error)\r\n      return errorResponse('\u9A8C\u8BC1\u5931\u8D25', 500)\r\n    }\r\n  }\r\n\r\n  // POST /logout - \u767B\u51FA\uFF08\u5BA2\u6237\u7AEF\u6E05\u9664\u4EE4\u724C\uFF09\r\n  if (path === '/logout' && method === 'POST') {\r\n    return successResponse({\r\n      message: '\u767B\u51FA\u6210\u529F'\r\n    })\r\n  }\r\n\r\n  // POST /admin/verify - \u9A8C\u8BC1\u7BA1\u7406\u5458\u5BC6\u7801\r\n  if (path === '/admin/verify' && method === 'POST') {\r\n    try {\r\n      const { password } = await request.json()\r\n\r\n      if (!password) {\r\n        return errorResponse('\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A', 400)\r\n      }\r\n\r\n      // \u83B7\u53D6\u73AF\u5883\u53D8\u91CF\u4E2D\u7684\u7BA1\u7406\u5458\u5BC6\u7801\r\n      const adminPassword = env.ADMIN_PASSWORD\r\n\r\n      if (!adminPassword) {\r\n        return errorResponse('\u7BA1\u7406\u5458\u529F\u80FD\u672A\u542F\u7528', 403)\r\n      }\r\n\r\n      // \u9A8C\u8BC1\u5BC6\u7801\r\n      if (password !== adminPassword) {\r\n        console.warn('Invalid admin password attempt')\r\n        return errorResponse('\u7BA1\u7406\u5458\u5BC6\u7801\u9519\u8BEF', 401)\r\n      }\r\n\r\n      console.log('Admin password verified successfully')\r\n      return successResponse({\r\n        valid: true,\r\n        message: '\u7BA1\u7406\u5458\u8EAB\u4EFD\u9A8C\u8BC1\u6210\u529F'\r\n      })\r\n    } catch (error) {\r\n      console.error('Admin verify error:', error)\r\n      return errorResponse('\u9A8C\u8BC1\u5931\u8D25', 500)\r\n    }\r\n  }\r\n\r\n  return errorResponse('Not Found', 404)\r\n}\r\n\r\n", "// \u9A8C\u8BC1\u7801\u63D0\u53D6\u5DE5\u5177 - \u589E\u5F3A\u7248\r\n\r\nconst patterns = [\r\n  // === \u9AD8\u4F18\u5148\u7EA7\uFF1A\u660E\u786E\u6807\u8BC6\u7684\u9A8C\u8BC1\u7801\uFF08\u5E26\u5173\u952E\u8BCD+\u5206\u9694\u7B26\uFF09===\r\n  \r\n  // \u4E2D\u6587 - \u4E25\u683C\u683C\u5F0F\uFF08\u5192\u53F7/\u7A7A\u683C/\u591A\u6362\u884C\u540E\u7D27\u8DDF\u9A8C\u8BC1\u7801\uFF09\r\n  /\u9A8C\u8BC1\u7801[\uFF1A:\\s]*[\u662F\u4E3A]{0,1}\\s*[\uFF1A:]?[\\s\\r\\n]*([A-Za-z0-9]{4,8})\\b/i,\r\n  /[\u3010\\[\\(]\u9A8C\u8BC1\u7801[\u3011\\]\\)][\uFF1A:\\s]*([A-Za-z0-9]{4,8})\\b/i,\r\n  /\u52A8\u6001\u7801[\uFF1A:\\s]*([A-Za-z0-9]{4,8})\\b/i,\r\n  /\u6FC0\u6D3B\u7801[\uFF1A:\\s]*([A-Za-z0-9]{4,8})\\b/i,\r\n  /\u6821\u9A8C\u7801[\uFF1A:\\s]*([A-Za-z0-9]{4,8})\\b/i,\r\n  /\u77ED\u4FE1\u9A8C\u8BC1\u7801[\uFF1A:\\s]*([A-Za-z0-9]{4,8})\\b/i,\r\n  /\u52A8\u6001\u5BC6\u7801[\uFF1A:\\s]*([A-Za-z0-9]{4,8})\\b/i,\r\n  /\u8EAB\u4EFD\u9A8C\u8BC1\u7801[\uFF1A:\\s]*([A-Za-z0-9]{4,8})\\b/i,\r\n  \r\n  // \u4E2D\u6587 - \u540E\u7F6E\u683C\u5F0F\r\n  /\\b([A-Za-z0-9]{4,8})\\s*[\u662F\u4E3A]\\s*\u60A8\u7684\u9A8C\u8BC1\u7801/i,\r\n  /\\b([A-Za-z0-9]{4,8})\\s*\u4E3A\u60A8\u7684(?:\u52A8\u6001)?\u9A8C\u8BC1\u7801/i,\r\n  /\u60A8\u7684\u9A8C\u8BC1\u7801[\u662F\u4E3A\uFF1A:\\s\\r\\n]*([A-Za-z0-9]{4,8})\\b/i,\r\n  /\u672C\u6B21\u9A8C\u8BC1\u7801[\u662F\u4E3A\uFF1A:\\s\\r\\n]*([A-Za-z0-9]{4,8})\\b/i,\r\n  \r\n  // \u82F1\u6587 - \u4E25\u683C\u683C\u5F0F\uFF08\u52A0\u5F3A\u5339\u914D\uFF0C\u907F\u514D\u63D0\u53D6\u5230\u516C\u53F8\u540D\u7B49\uFF09\r\n  /verification\\s+code[\uFF1A:\\s]*(?:is)?[\uFF1A:\\s]*\\r?\\n?\\s*([A-Za-z0-9]{4,8})(?:\\s|$|\\r|\\n)/i,\r\n  /confirm(?:ation)?\\s+code[\uFF1A:\\s]*(?:is)?[\uFF1A:\\s]*\\r?\\n?\\s*([A-Za-z0-9]{4,8})(?:\\s|$|\\r|\\n)/i,\r\n  /security\\s+code[\uFF1A:\\s]*(?:is)?[\uFF1A:\\s]*\\r?\\n?\\s*([A-Za-z0-9]{4,8})(?:\\s|$|\\r|\\n)/i,\r\n  /auth(?:entication)?\\s+code[\uFF1A:\\s]*(?:is)?[\uFF1A:\\s]*\\r?\\n?\\s*([A-Za-z0-9]{4,8})(?:\\s|$|\\r|\\n)/i,\r\n  /(?:your|the)\\s+code[\uFF1A:\\s]*(?:is)?[\uFF1A:\\s]*\\r?\\n?\\s*([A-Za-z0-9]{4,8})(?:\\s|$|\\r|\\n)/i,\r\n  /OTP[\uFF1A:\\s]*(?:code)?[\uFF1A:\\s]*(?:is)?[\uFF1A:\\s]*\\r?\\n?\\s*([A-Za-z0-9]{4,8})(?:\\s|$|\\r|\\n)/i,\r\n  /PIN[\uFF1A:\\s]*(?:code)?[\uFF1A:\\s]*(?:is)?[\uFF1A:\\s]*\\r?\\n?\\s*([A-Za-z0-9]{4,8})(?:\\s|$|\\r|\\n)/i,\r\n  /one[- ]time\\s+(?:pass)?(?:word|code)[\uFF1A:\\s]*(?:is)?[\uFF1A:\\s]*\\r?\\n?\\s*([A-Za-z0-9]{4,8})(?:\\s|$|\\r|\\n)/i,\r\n  \r\n  // === \u4E2D\u4F18\u5148\u7EA7\uFF1A\u5E38\u89C1\u53E5\u5F0F ===\r\n  \r\n  // \"code is XXXX\" / \"Code: XXXX\"\r\n  /\\bcode\\s+(?:is|was)[\uFF1A:\\s]*([A-Za-z0-9]{4,8})\\b/i,\r\n  /\\bcode[\uFF1A:]\\s*([A-Za-z0-9]{4,8})\\b/i,\r\n  \r\n  // \"use XXXX to verify\"\r\n  /use\\s+(?:code\\s+)?([A-Za-z0-9]{4,8})\\s+to\\s+(?:verify|confirm|authenticate)/i,\r\n  /enter\\s+(?:code\\s+)?([A-Za-z0-9]{4,8})\\s+to\\s+(?:verify|confirm|proceed)/i,\r\n  \r\n  // \"\u4EE5\u4E0B\u662F\u60A8\u7684\u9A8C\u8BC1\u7801\"\r\n  /\u4EE5\u4E0B\u662F?\u60A8\u7684\u9A8C\u8BC1\u7801[\uFF1A:\\s]*([A-Za-z0-9]{4,8})\\b/i,\r\n  /\u8BF7\u8F93\u5165\u9A8C\u8BC1\u7801[\uFF1A:\\s]*([A-Za-z0-9]{4,8})\\b/i,\r\n  /\u8BF7\u4F7F\u7528\u9A8C\u8BC1\u7801[\uFF1A:\\s]*([A-Za-z0-9]{4,8})\\b/i,\r\n  \r\n  // === \u4F4E\u4F18\u5148\u7EA7\uFF1A\u5BBD\u677E\u5339\u914D\uFF08\u53EF\u80FD\u8BEF\u5224\uFF0C\u653E\u6700\u540E\uFF09===\r\n  \r\n  // HTML \u6807\u7B7E\u5185\u7684\u7A81\u51FA\u663E\u793A\uFF08\u5E38\u89C1\u4E8E\u90AE\u4EF6\u6A21\u677F\uFF09\r\n  /<(?:strong|b|span|td|div|h[1-6])[^>]*>\\s*([A-Za-z0-9]{4,8})\\s*<\\/(?:strong|b|span|td|div|h[1-6])>/i,\r\n  \r\n  // \u7EAF\u6570\u5B576\u4F4D\uFF08\u5E38\u89C1\u683C\u5F0F\uFF0C\u4F46\u9700\u6392\u9664\u65E5\u671F/\u65F6\u95F4/\u91D1\u989D\u7B49\u5E72\u6270\uFF09\r\n  /(?:^|[^\\d.])(\\d{6})(?:[^\\d.]|$)/,\r\n  \r\n  // \u5B57\u6BCD\u6570\u5B57\u6DF7\u5408\uFF08\u9700\u9644\u8FD1\u6709\u9A8C\u8BC1\u76F8\u5173\u8BCD\u6C47\uFF09\r\n  /(?:\u9A8C\u8BC1|code|verify|confirm).{0,30}\\b([A-Z0-9]{5,8})\\b/i,\r\n  /\\b([A-Z0-9]{5,8})\\b.{0,30}(?:\u9A8C\u8BC1|code|verify|confirm)/i\r\n]\r\n\r\n/**\r\n * \u4ECE\u6587\u672C\u4E2D\u63D0\u53D6\u9A8C\u8BC1\u7801\uFF08\u589E\u5F3A\u7248\uFF09\r\n * @param {string} text - \u90AE\u4EF6\u6587\u672C\u6216HTML\u5185\u5BB9\r\n * @returns {string|null} - \u63D0\u53D6\u7684\u9A8C\u8BC1\u7801\u6216 null\r\n */\r\nexport function extractVerificationCode(text) {\r\n  if (!text) return null\r\n\r\n  // \u4FDD\u7559\u539F\u59CB\u6587\u672C\u7528\u4E8E HTML \u6807\u7B7E\u5339\u914D\r\n  const originalText = text\r\n  // \u79FB\u9664HTML\u6807\u7B7E\u751F\u6210\u7EAF\u6587\u672C\uFF08\u4F46\u4FDD\u7559\u7ED3\u6784\u7528\u4E8E\u4E0A\u4E0B\u6587\u7406\u89E3\uFF09\r\n  const plainText = text.replace(/<[^>]+>/g, ' ').replace(/\\s+/g, ' ')\r\n\r\n  // \u5019\u9009\u9A8C\u8BC1\u7801\uFF08\u5E26\u6743\u91CD\u8BC4\u5206\uFF09\r\n  const candidates = []\r\n\r\n  for (let i = 0; i < patterns.length; i++) {\r\n    const pattern = patterns[i]\r\n    \r\n    // \u5BF9\u539F\u59CB\u6587\u672C\u548C\u7EAF\u6587\u672C\u90FD\u5C1D\u8BD5\u5339\u914D\uFF08HTML \u6807\u7B7E\u6A21\u5F0F\u7528\u539F\u59CB\uFF0C\u5176\u4ED6\u7528\u7EAF\u6587\u672C\uFF09\r\n    const isHtmlPattern = pattern.source.includes('<')\r\n    const targetText = isHtmlPattern ? originalText : plainText\r\n    \r\n    const match = targetText.match(pattern)\r\n    if (match && match[1]) {\r\n      const code = match[1].trim().toUpperCase()\r\n      \r\n      // \u57FA\u7840\u9A8C\u8BC1\r\n      if (code.length < 4 || code.length > 8) continue\r\n      \r\n      // \u6392\u9664\u660E\u663E\u4E0D\u662F\u9A8C\u8BC1\u7801\u7684\uFF08\u5982\u65E5\u671F\u3001\u65F6\u95F4\u3001\u5E38\u89C1\u8BCD\u6C47\uFF09\r\n      if (isInvalidCode(code)) continue\r\n      \r\n      // \u8BA1\u7B97\u6743\u91CD\uFF1A\u7D22\u5F15\u8D8A\u5C0F\uFF08\u4F18\u5148\u7EA7\u8D8A\u9AD8\uFF09\u6743\u91CD\u8D8A\u5927\r\n      const priority = patterns.length - i\r\n      candidates.push({ code, priority })\r\n    }\r\n  }\r\n\r\n  // \u8FD4\u56DE\u6743\u91CD\u6700\u9AD8\u7684\u5019\u9009\u9A8C\u8BC1\u7801\r\n  if (candidates.length > 0) {\r\n    candidates.sort((a, b) => b.priority - a.priority)\r\n    return candidates[0].code\r\n  }\r\n\r\n  return null\r\n}\r\n\r\n/**\r\n * \u5224\u65AD\u662F\u5426\u4E3A\u65E0\u6548\u9A8C\u8BC1\u7801\uFF08\u6392\u9664\u5E38\u89C1\u5E72\u6270\uFF09\r\n * @param {string} code\r\n * @returns {boolean}\r\n */\r\nfunction isInvalidCode(code) {\r\n  const upper = code.toUpperCase()\r\n  \r\n  // \u6392\u9664\u7EAF\u5B57\u6BCD\u7684\u5E38\u89C1\u8BCD\uFF08\u4E0D\u592A\u53EF\u80FD\u662F\u9A8C\u8BC1\u7801\uFF09\r\n  const commonWords = ['BUTTON', 'SUBMIT', 'LOGIN', 'EMAIL', 'PHONE', 'CLICK', 'HERE', 'VERIFY', 'CODE', 'AMAZON', 'GOOGLE', 'PAYPAL', 'GITHUB', 'ACCOUNT', 'MICROSOFT', 'APPLE', 'FACEBOOK', 'TWITTER', 'ANYONE', 'SOMEONE', 'PLEASE']\r\n  if (commonWords.includes(upper)) return true\r\n  \r\n  // \u6392\u9664\u660E\u663E\u7684\u65E5\u671F\u683C\u5F0F\uFF08\u5982 202410\u300120241016\uFF09\r\n  if (/^20\\d{4,6}$/.test(code)) return true\r\n  \r\n  // \u6392\u9664\u660E\u663E\u7684\u65F6\u95F4\u683C\u5F0F\uFF08\u5982 120000\u3001235959\uFF09\r\n  if (/^[0-2]\\d[0-5]\\d[0-5]\\d$/.test(code)) return true\r\n  \r\n  // \u6392\u9664\u7EAF\u91CD\u590D\u5B57\u7B26\uFF08\u5982 111111\u3001AAAAAA\uFF09\r\n  if (/^(.)\\1{3,}$/.test(code)) return true\r\n  \r\n  // \u6392\u9664\u51680\u6216\u51689\r\n  if (/^0+$/.test(code) || /^9+$/.test(code)) return true\r\n  \r\n  return false\r\n}\r\n\r\n/**\r\n * \u4ECE\u90AE\u4EF6\u4E3B\u9898\u548C\u6B63\u6587\u4E2D\u63D0\u53D6\u9A8C\u8BC1\u7801\uFF08\u589E\u5F3A\u7248\uFF09\r\n * @param {string} subject - \u90AE\u4EF6\u4E3B\u9898\r\n * @param {string} body - \u90AE\u4EF6\u6B63\u6587\r\n * @returns {string|null}\r\n */\r\nexport function extractCodeFromEmail(subject, body) {\r\n  // \u4F18\u5148\u4ECE\u4E3B\u9898\u4E2D\u67E5\u627E\uFF08\u4E3B\u9898\u547D\u4E2D\u7387\u901A\u5E38\u66F4\u9AD8\u4E14\u66F4\u51C6\u786E\uFF09\r\n  const codeFromSubject = extractVerificationCode(subject)\r\n  if (codeFromSubject) {\r\n    return codeFromSubject\r\n  }\r\n\r\n  // \u518D\u4ECE\u6B63\u6587\u4E2D\u67E5\u627E\r\n  const codeFromBody = extractVerificationCode(body)\r\n  if (codeFromBody) {\r\n    return codeFromBody\r\n  }\r\n\r\n  // \u6700\u540E\u5C1D\u8BD5\u66F4\u5BBD\u677E\u7684\u5339\u914D\uFF08\u4EC5\u5F53\u524D\u4E24\u6B65\u90FD\u5931\u8D25\uFF09\r\n  // \u9488\u5BF9\u90E8\u5206\u90AE\u4EF6\u6B63\u6587\u53EA\u6709\u4E00\u4E2A\u7A81\u51FA\u7684\u6570\u5B57\u4E32\u7684\u60C5\u51B5\r\n  return extractFallbackCode(body)\r\n}\r\n\r\n/**\r\n * \u515C\u5E95\u9A8C\u8BC1\u7801\u63D0\u53D6\uFF08\u6781\u5BBD\u677E\uFF0C\u4EC5\u7528\u4E8E\u524D\u9762\u65B9\u6CD5\u90FD\u5931\u8D25\u65F6\uFF09\r\n * @param {string} text\r\n * @returns {string|null}\r\n */\r\nfunction extractFallbackCode(text) {\r\n  if (!text) return null\r\n  \r\n  const plainText = text.replace(/<[^>]+>/g, ' ')\r\n  \r\n  // \u67E5\u627E\u88AB\u7A7A\u767D\u6216\u6807\u70B9\u5B8C\u5168\u9694\u79BB\u76844-8\u4F4D\u5B57\u6BCD\u6570\u5B57\u7EC4\u5408\r\n  const isolated = plainText.match(/(?:^|[\\s\\r\\n,.;!?(){}[\\]\"'\"\"\"''\u300A\u300B\u300C\u300D\u3010\u3011])\\s*([A-Z0-9]{4,8})\\s*(?:[\\s\\r\\n,.;!?(){}[\\]\"'\"\"\"''\u300A\u300B\u300C\u300D\u3010\u3011]|$)/i)\r\n  if (isolated && isolated[1]) {\r\n    const code = isolated[1].trim().toUpperCase()\r\n    if (!isInvalidCode(code)) {\r\n      return code\r\n    }\r\n  }\r\n  \r\n  return null\r\n}\r\n\r\n/**\r\n * \u9A8C\u8BC1\u7801\u7C7B\u578B\u8BC6\u522B\r\n * @param {string} code\r\n * @returns {string} - 'numeric', 'alphanumeric', 'alpha'\r\n */\r\nexport function getCodeType(code) {\r\n  if (/^\\d+$/.test(code)) {\r\n    return 'numeric'\r\n  } else if (/^[A-Z]+$/i.test(code)) {\r\n    return 'alpha'\r\n  } else {\r\n    return 'alphanumeric'\r\n  }\r\n}\r\n\r\n", "// Cloudflare Email Worker\n// \u8FD9\u4E2A Worker \u4F1A\u5728\u90AE\u4EF6\u5230\u8FBE\u65F6\u81EA\u52A8\u89E6\u53D1\n\nimport { extractCodeFromEmail } from './utils/codeExtractor'\n\nexport default {\n  async email(message, env, ctx) {\n    try {\n      // \u83B7\u53D6\u90AE\u4EF6\u4FE1\u606F\n      const from = message.from\n      const to = message.to\n      const subject = message.headers.get('subject') || ''\n      \n      // \u67E5\u627E\u5BF9\u5E94\u7684\u4E34\u65F6\u90AE\u7BB1\n      const tempEmail = await env.DB.prepare(`\n        SELECT id FROM temp_emails WHERE email = ? AND status = 'active'\n      `).bind(to).first()\n\n      if (!tempEmail) {\n        console.log(`No active temp email found for: ${to}`)\n        // \u7EE7\u7EED\u8F6C\u53D1\u90AE\u4EF6\n        await message.forward(env.TARGET_EMAIL || await getTargetEmail(env))\n        return\n      }\n\n      // \u8BFB\u53D6\u90AE\u4EF6\u5185\u5BB9\n      let bodyText = ''\n      let bodyHtml = ''\n\n      try {\n        const reader = message.raw.getReader()\n        const chunks = []\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) break\n          chunks.push(value)\n        }\n\n        const rawBytes = new Uint8Array(chunks.reduce((acc, cur) => acc + cur.length, 0))\n        {\n          let offset = 0\n          for (const chunk of chunks) {\n            rawBytes.set(chunk, offset)\n            offset += chunk.length\n          }\n        }\n\n        // \u4F18\u5148\u6309 MIME \u89E3\u6790\uFF08\u652F\u6301 multipart, base64, quoted-printable, charset\uFF09\n        const parsed = parseMimeMessage(rawBytes)\n        bodyText = parsed.text || ''\n        bodyHtml = parsed.html || ''\n\n        // \u515C\u5E95\uFF1A\u9000\u56DE\u5230\u7B80\u5355\u6B63\u5219\n        if (!bodyText && !bodyHtml) {\n          const rawEmail = new TextDecoder().decode(rawBytes)\n          bodyText = extractTextFromRaw(rawEmail)\n          bodyHtml = extractHtmlFromRaw(rawEmail)\n        }\n      } catch (error) {\n        console.error('Failed to read email body:', error)\n      }\n\n      // \u4FEE\u590D\u53EF\u80FD\u7684\u4E71\u7801\n      bodyText = fixGarbledText(bodyText)\n      bodyHtml = fixGarbledText(bodyHtml)\n      const fixedSubject = fixGarbledText(subject)\n\n      // \u63D0\u53D6\u9A8C\u8BC1\u7801\uFF08\u4F7F\u7528\u4FEE\u590D\u540E\u7684\u5185\u5BB9\uFF09\n      const verificationCode = extractCodeFromEmail(fixedSubject, bodyText || bodyHtml)\n\n      // \u4FDD\u5B58\u5230\u6570\u636E\u5E93\uFF08\u4F7F\u7528\u4FEE\u590D\u540E\u7684\u5185\u5BB9\uFF09\n      const messageId = message.headers.get('message-id') || generateMessageId()\n      \n      await env.DB.prepare(`\n        INSERT INTO messages (\n          temp_email_id,\n          message_id,\n          sender,\n          subject,\n          body_text,\n          body_html,\n          verification_code,\n          received_at,\n          is_read\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 0)\n      `).bind(\n        tempEmail.id,\n        messageId,\n        from,\n        fixedSubject,\n        bodyText,\n        bodyHtml,\n        verificationCode,\n        new Date().toISOString()\n      ).run()\n\n      // \u66F4\u65B0\u90AE\u7BB1\u7684\u6700\u540E\u6536\u4FE1\u65F6\u95F4\u548C\u90AE\u4EF6\u6570\u91CF\n      await env.DB.prepare(`\n        UPDATE temp_emails \n        SET last_received_at = datetime('now'),\n            message_count = message_count + 1\n        WHERE id = ?\n      `).bind(tempEmail.id).run()\n\n      // \u901A\u8FC7 WebSocket \u63A8\u9001\u901A\u77E5\uFF08\u5982\u679C\u5B9E\u73B0\u4E86\uFF09\n      try {\n        await notifyNewEmail(env, {\n          temp_email: to,\n          sender: from,\n          subject,\n          verification_code: verificationCode,\n          received_at: new Date().toISOString()\n        })\n      } catch (error) {\n        console.error('Failed to send WebSocket notification:', error)\n      }\n\n      // \u8F6C\u53D1\u90AE\u4EF6\u5230\u76EE\u6807\u90AE\u7BB1\n      const targetEmail = env.TARGET_EMAIL || await getTargetEmail(env)\n      if (targetEmail) {\n        await message.forward(targetEmail)\n      }\n\n    } catch (error) {\n      console.error('Email worker error:', error)\n      // \u5373\u4F7F\u51FA\u9519\u4E5F\u8981\u8F6C\u53D1\u90AE\u4EF6\n      try {\n        const targetEmail = env.TARGET_EMAIL || await getTargetEmail(env)\n        if (targetEmail) {\n          await message.forward(targetEmail)\n        }\n      } catch (forwardError) {\n        console.error('Failed to forward email:', forwardError)\n      }\n    }\n  }\n}\n\n// \u8F7B\u91CF MIME \u89E3\u6790\u5668\uFF1A\u5C1D\u8BD5\u89E3\u6790\u5E38\u89C1\u7684 multipart/alternative\u3001quoted-printable\u3001base64 \u4E0E charset\nfunction parseMimeMessage(rawBytes) {\n  try {\n    // \u4F7F\u7528 latin1 \u89E3\u7801\u90AE\u4EF6\u5934\u90E8\uFF08\u907F\u514D\u4E2D\u6587\u4E71\u7801\uFF09\n    const raw = new TextDecoder('latin1').decode(rawBytes)\n    const contentTypeMatch = raw.match(/Content-Type:\\s*([^;\\r\\n]+)(;[\\s\\S]*?)?\\r?\\n/i)\n    const contentType = contentTypeMatch ? contentTypeMatch[1].toLowerCase() : ''\n    const boundaryMatch = raw.match(/boundary=\\\"?([^\\\";\\r\\n]+)\\\"?/i)\n    const boundary = boundaryMatch ? boundaryMatch[1] : null\n\n    // \u7B80\u5355 body \u63D0\u53D6\uFF08\u8DF3\u8FC7 headers\uFF09\n    const separator = /\\r?\\n\\r?\\n/\n    const headerEndIndex = raw.search(separator)\n    const bodyRaw = headerEndIndex >= 0 ? raw.slice(headerEndIndex + raw.match(separator)[0].length) : raw\n\n    // multipart \u5904\u7406\n    if (boundary && /multipart\\//.test(contentType)) {\n      const parts = bodyRaw.split(new RegExp(`--${boundary}(?:--)?\\r?\\n`))\n      let text = ''\n      let html = ''\n      for (const part of parts) {\n        if (!part || part.trim() === '--') continue\n        const partHeaderEnd = part.search(separator)\n        if (partHeaderEnd < 0) continue\n        const partHeaders = part.slice(0, partHeaderEnd)\n        const partBody = part.slice(partHeaderEnd + part.match(separator)[0].length)\n        const partTypeMatch = partHeaders.match(/Content-Type:\\s*([^;\\r\\n]+)/i)\n        const partType = partTypeMatch ? partTypeMatch[1].toLowerCase() : ''\n        const encoding = (partHeaders.match(/Content-Transfer-Encoding:\\s*([^\\r\\n]+)/i)?.[1] || '').toLowerCase()\n        const charset = (partHeaders.match(/charset=\\\"?([^\\\";\\r\\n]+)\\\"?/i)?.[1] || 'utf-8').toLowerCase()\n\n        const decoded = decodeBody(partBody.trim(), encoding, charset)\n        if (/text\\/plain/.test(partType) && !text) text = decoded\n        if (/text\\/html/.test(partType) && !html) html = decoded\n      }\n      return { text, html }\n    }\n\n    // \u5355\u4F53 text/html \u6216 text/plain\n    const encoding = (raw.match(/Content-Transfer-Encoding:\\s*([^\\r\\n]+)/i)?.[1] || '').toLowerCase()\n    const charset = (raw.match(/charset=\\\"?([^\\\";\\r\\n]+)\\\"?/i)?.[1] || 'utf-8').toLowerCase()\n    const decoded = decodeBody(bodyRaw.trim(), encoding, charset)\n    if (/text\\/html/.test(contentType)) return { text: '', html: decoded }\n    if (/text\\/plain/.test(contentType)) return { text: decoded, html: '' }\n\n    // \u672A\u77E5\u7C7B\u578B\uFF0C\u539F\u6837\u8FD4\u56DE\u4E3A text\n    return { text: decoded, html: '' }\n  } catch (e) {\n    return { text: '', html: '' }\n  }\n}\n\nfunction decodeBody(body, encoding, charset) {\n  try {\n    let bytes\n    \n    if (encoding === 'base64') {\n      // Base64 \u89E3\u7801\n      const clean = body.replace(/\\s+/g, '')\n      const bin = atob(clean)\n      bytes = new Uint8Array(bin.length)\n      for (let i = 0; i < bin.length; i++) {\n        bytes[i] = bin.charCodeAt(i)\n      }\n    } else if (encoding === 'quoted-printable') {\n      // Quoted-Printable \u89E3\u7801\n      // \u5148\u5904\u7406\u8F6F\u6362\u884C\n      let qp = body.replace(/=\\r?\\n/g, '')\n      // \u89E3\u7801 =XX \u683C\u5F0F\n      const decoded = qp.replace(/=([0-9A-Fa-f]{2})/g, (_, hex) => {\n        return String.fromCharCode(parseInt(hex, 16))\n      })\n      // \u8F6C\u6362\u4E3A\u5B57\u8282\u6570\u7EC4\uFF08\u4F7F\u7528 latin1 \u907F\u514D\u518D\u6B21\u7F16\u7801\uFF09\n      bytes = new Uint8Array(decoded.length)\n      for (let i = 0; i < decoded.length; i++) {\n        bytes[i] = decoded.charCodeAt(i) & 0xFF\n      }\n    } else {\n      // 8bit \u6216 7bit \u7F16\u7801\uFF0C\u76F4\u63A5\u4F7F\u7528\u539F\u59CB\u5B57\u8282\n      bytes = new Uint8Array(body.length)\n      for (let i = 0; i < body.length; i++) {\n        bytes[i] = body.charCodeAt(i) & 0xFF\n      }\n    }\n\n    // \u6839\u636E\u5B57\u7B26\u96C6\u89E3\u7801\n    const targetCharset = normalizeCharset(charset)\n    \n    // Cloudflare Workers \u73AF\u5883\u4E0D\u652F\u6301 GBK\uFF0C\u56DE\u9000\u5230 UTF-8\n    try {\n      const dec = new TextDecoder(targetCharset, { fatal: false })\n      return dec.decode(bytes)\n    } catch (e) {\n      // \u5982\u679C\u5B57\u7B26\u96C6\u4E0D\u652F\u6301\uFF0C\u5C1D\u8BD5 UTF-8\n      const dec = new TextDecoder('utf-8', { fatal: false })\n      return dec.decode(bytes)\n    }\n  } catch (error) {\n    console.error('Decode body error:', error)\n    return body\n  }\n}\n\nfunction normalizeCharset(cs) {\n  const c = cs.toLowerCase()\n  // \u6CE8\u610F\uFF1ACloudflare Workers \u53EF\u80FD\u4E0D\u652F\u6301 GBK\n  // \u5982\u679C\u662F GBK\uFF0C\u5C1D\u8BD5 UTF-8\uFF08\u5927\u591A\u6570\u73B0\u4EE3\u90AE\u4EF6\u90FD\u662F UTF-8\uFF09\n  if (c.includes('gb2312') || c.includes('gbk')) {\n    console.warn('GBK charset detected, trying UTF-8 instead')\n    return 'utf-8'\n  }\n  if (c.includes('utf-8') || c.includes('utf8')) return 'utf-8'\n  if (c.includes('iso-8859-1') || c.includes('latin')) return 'latin1'\n  return 'utf-8'\n}\n\n/**\n * \u4FEE\u590D\u4E71\u7801\u6587\u672C\uFF08\u5C1D\u8BD5\u91CD\u65B0\u89E3\u7801\uFF09\n */\nfunction fixGarbledText(text) {\n  if (!text) return text\n  \n  try {\n    // \u68C0\u6D4B\u662F\u5426\u4E3A UTF-8 \u4E71\u7801\uFF08\u5E38\u89C1\u6A21\u5F0F\uFF1A\u00E9\u00AE\u00E7\u00AE\u00B1\uFF09\n    if (/[\u00C3\u00C2\u00A9\u00C2\u00AE\u00C2][^a-zA-Z0-9\\s]{2,}/.test(text)) {\n      // \u5C1D\u8BD5\u91CD\u65B0\u7F16\u7801\u4E3A latin1 \u5B57\u8282\uFF0C\u7136\u540E\u7528 UTF-8 \u89E3\u7801\n      const bytes = new Uint8Array(text.length)\n      for (let i = 0; i < text.length; i++) {\n        bytes[i] = text.charCodeAt(i) & 0xFF\n      }\n      const fixed = new TextDecoder('utf-8', { fatal: false }).decode(bytes)\n      \n      // \u68C0\u67E5\u4FEE\u590D\u540E\u662F\u5426\u6709\u4E2D\u6587\u5B57\u7B26\n      if (/[\\u4e00-\\u9fa5]/.test(fixed)) {\n        console.log('Fixed garbled text')\n        return fixed\n      }\n    }\n  } catch (e) {\n    console.error('Fix garbled text error:', e)\n  }\n  \n  return text\n}\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u4ECE\u539F\u59CB\u90AE\u4EF6\u4E2D\u63D0\u53D6\u6587\u672C\nfunction extractTextFromRaw(raw) {\n  // \u7B80\u5316\u7248\u672C\uFF0C\u5B9E\u9645\u5E94\u4F7F\u7528\u4E13\u95E8\u7684\u90AE\u4EF6\u89E3\u6790\u5E93\n  const textMatch = raw.match(/Content-Type: text\\/plain[\\s\\S]*?\\n\\n([\\s\\S]*?)(?=\\n--|\\nContent-Type:|\\n$)/i)\n  return textMatch ? textMatch[1].trim() : ''\n}\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u4ECE\u539F\u59CB\u90AE\u4EF6\u4E2D\u63D0\u53D6HTML\nfunction extractHtmlFromRaw(raw) {\n  const htmlMatch = raw.match(/Content-Type: text\\/html[\\s\\S]*?\\n\\n([\\s\\S]*?)(?=\\n--|\\nContent-Type:|\\n$)/i)\n  return htmlMatch ? htmlMatch[1].trim() : ''\n}\n\n// \u751F\u6210\u6D88\u606FID\nfunction generateMessageId() {\n  return `${Date.now()}-${Math.random().toString(36).substring(2)}@tempemail`\n}\n\n// \u83B7\u53D6\u76EE\u6807\u90AE\u7BB1\nasync function getTargetEmail(env) {\n  try {\n    const config = await env.DB.prepare(`\n      SELECT config_value FROM config WHERE config_key = 'target_qq_email'\n    `).first()\n    return config?.config_value || null\n  } catch (error) {\n    return null\n  }\n}\n\n// \u53D1\u9001 WebSocket \u901A\u77E5\nasync function notifyNewEmail(env, data) {\n  // \u5982\u679C\u4F7F\u7528 Durable Objects\uFF0C\u53EF\u4EE5\u5728\u8FD9\u91CC\u5E7F\u64AD\n  // \u7B80\u5316\u7248\u672C\uFF1A\u5B58\u50A8\u5230 KV\uFF0C\u8BA9\u524D\u7AEF\u8F6E\u8BE2\n  if (env.NOTIFICATIONS) {\n    const key = `notification:${Date.now()}`\n    await env.NOTIFICATIONS.put(key, JSON.stringify({\n      type: 'new_email',\n      data\n    }), {\n      expirationTtl: 3600 // 1\u5C0F\u65F6\u540E\u8FC7\u671F\n    })\n  }\n}\n\n", "import { Router } from './router'\nimport { corsHeaders } from './utils/cors'\nimport emailRoutes from './routes/email'\nimport messageRoutes from './routes/message'\nimport monitorRoutes from './routes/monitor'\nimport configRoutes from './routes/config'\nimport authRoutes from './routes/auth'\nimport emailWorker from './email-worker'\nimport { requireAuth, requiresAuth } from './middleware/auth'\n\nexport default {\n  async fetch(request, env, ctx) {\n    // \u5904\u7406 CORS \u9884\u68C0\u8BF7\u6C42\n    if (request.method === 'OPTIONS') {\n      return new Response(null, { headers: corsHeaders })\n    }\n\n    // \u57FA\u7840\u5065\u5EB7\u68C0\u67E5\u4E0E\u6B22\u8FCE\u9875\n    try {\n      const url = new URL(request.url)\n      const path = url.pathname\n      if (request.method === 'GET' && (path === '/' || path === '/api')) {\n        const body = JSON.stringify({\n          success: true,\n          name: 'tempemail-api',\n          status: 'ok',\n          endpoints: ['/api/emails', '/api/messages', '/api/monitor', '/api/config'],\n          health: '/health'\n        })\n        return new Response(body, {\n          status: 200,\n          headers: {\n            'Content-Type': 'application/json',\n            ...corsHeaders\n          }\n        })\n      }\n      if (request.method === 'GET' && (path === '/health' || path === '/api/health')) {\n        return new Response(JSON.stringify({ success: true, status: 'ok' }), {\n          status: 200,\n          headers: {\n            'Content-Type': 'application/json',\n            ...corsHeaders\n          }\n        })\n      }\n    } catch (_) {}\n\n    // \u8BBF\u95EE\u63A7\u5236\u68C0\u67E5\uFF08\u9664\u4E86\u516C\u5F00\u8DEF\u5F84\uFF09\n    const url = new URL(request.url)\n    const path = url.pathname\n    \n    if (requiresAuth(path)) {\n      const authError = requireAuth(request, env)\n      if (authError) {\n        return authError\n      }\n    }\n\n    const router = new Router()\n\n    // \u6CE8\u518C\u8DEF\u7531\n    router.use('/api/auth', authRoutes)\n    router.use('/api/emails', emailRoutes)\n    router.use('/api/messages', messageRoutes)\n    router.use('/api/monitor', monitorRoutes)\n    router.use('/api/config', configRoutes)\n\n    // WebSocket \u5904\u7406\n    if (request.headers.get('Upgrade') === 'websocket') {\n      return handleWebSocket(request, env)\n    }\n\n    try {\n      const response = await router.handle(request, env, ctx)\n      \n      // \u6DFB\u52A0 CORS \u5934\n      const headers = new Headers(response.headers)\n      Object.entries(corsHeaders).forEach(([key, value]) => {\n        headers.set(key, value)\n      })\n\n      return new Response(response.body, {\n        status: response.status,\n        statusText: response.statusText,\n        headers\n      })\n    } catch (error) {\n      console.error('Request error:', error)\n      return new Response(\n        JSON.stringify({\n          success: false,\n          error: error.message || 'Internal Server Error'\n        }),\n        {\n          status: 500,\n          headers: {\n            'Content-Type': 'application/json',\n            ...corsHeaders\n          }\n        }\n      )\n    }\n  },\n  // Email event handler: forward to email-worker implementation\n  async email(message, env, ctx) {\n    return emailWorker.email(message, env, ctx)\n  }\n}\n\n// WebSocket \u5904\u7406\nfunction handleWebSocket(request, env) {\n  // \u4F7F\u7528 Durable Objects \u5904\u7406 WebSocket\n  const upgradeHeader = request.headers.get('Upgrade')\n  if (upgradeHeader !== 'websocket') {\n    return new Response('Expected Upgrade: websocket', { status: 426 })\n  }\n\n  // \u8FD9\u91CC\u7B80\u5316\u5904\u7406\uFF0C\u5B9E\u9645\u4F7F\u7528\u9700\u8981 Durable Objects\n  const pair = new WebSocketPair()\n  const [client, server] = Object.values(pair)\n\n  // \u63A5\u53D7 WebSocket \u8FDE\u63A5\n  server.accept()\n\n  // \u53D1\u9001\u6B22\u8FCE\u6D88\u606F\n  server.send(JSON.stringify({\n    type: 'connected',\n    message: 'WebSocket connected'\n  }))\n\n  // \u5904\u7406\u6D88\u606F\n  server.addEventListener('message', event => {\n    try {\n      const data = JSON.parse(event.data)\n      console.log('WebSocket message received:', data)\n\n      if (data.type === 'ping') {\n        server.send(JSON.stringify({ type: 'pong' }))\n      }\n    } catch (error) {\n      console.error('WebSocket message error:', error)\n    }\n  })\n\n  server.addEventListener('close', () => {\n    console.log('WebSocket closed')\n  })\n\n  return new Response(null, {\n    status: 101,\n    webSocket: client\n  })\n}\n\n// Durable Object for WebSocket (\u9AD8\u7EA7\u529F\u80FD)\nexport class WebSocketDurableObject {\n  constructor(state, env) {\n    this.state = state\n    this.env = env\n    this.sessions = []\n  }\n\n  async fetch(request) {\n    const pair = new WebSocketPair()\n    const [client, server] = Object.values(pair)\n\n    server.accept()\n    this.sessions.push(server)\n\n    server.addEventListener('close', () => {\n      this.sessions = this.sessions.filter(s => s !== server)\n    })\n\n    return new Response(null, {\n      status: 101,\n      webSocket: client\n    })\n  }\n\n  // \u5E7F\u64AD\u6D88\u606F\u7ED9\u6240\u6709\u8FDE\u63A5\n  broadcast(message) {\n    const data = JSON.stringify(message)\n    this.sessions.forEach(session => {\n      try {\n        session.send(data)\n      } catch (error) {\n        console.error('Broadcast error:', error)\n      }\n    })\n  }\n}\n\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\src\\\\index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\src\\\\index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-T88egN\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-T88egN\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-T88egN\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["getTargetEmail", "encoding", "charset", "decoded", "url", "path"]
}
