{
  "version": 3,
  "sources": ["../bundle-h3ULUv/checked-fetch.js", "../../../src/router.js", "../../../src/utils/cors.js", "../../../src/services/cloudflare.js", "../../../src/routes/email.js", "../../../src/routes/message.js", "../../../src/routes/monitor.js", "../../../src/routes/config.js", "../../../src/index.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-h3ULUv/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-h3ULUv/middleware-loader.entry.ts"],
  "sourceRoot": "E:\\\u684C\u9762\\tempemail\\workers\\.wrangler\\tmp\\dev-6781gI",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// \u7B80\u5355\u7684\u8DEF\u7531\u5668\u5B9E\u73B0\r\nexport class Router {\r\n  constructor() {\r\n    this.routes = []\r\n  }\r\n\r\n  use(prefix, handler) {\r\n    this.routes.push({ prefix, handler })\r\n  }\r\n\r\n  async handle(request, env, ctx) {\r\n    const url = new URL(request.url)\r\n    const path = url.pathname\r\n\r\n    for (const route of this.routes) {\r\n      if (path.startsWith(route.prefix)) {\r\n        const subPath = path.slice(route.prefix.length) || '/'\r\n        const subRequest = new Request(\r\n          new URL(subPath, request.url),\r\n          request\r\n        )\r\n        \r\n        return await route.handler(subRequest, env, ctx)\r\n      }\r\n    }\r\n\r\n    return new Response(\r\n      JSON.stringify({\r\n        success: false,\r\n        error: 'Not Found'\r\n      }),\r\n      {\r\n        status: 404,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\n", "export const corsHeaders = {\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n  'Access-Control-Max-Age': '86400'\r\n}\r\n\r\nexport function jsonResponse(data, status = 200) {\r\n  return new Response(JSON.stringify(data), {\r\n    status,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...corsHeaders\r\n    }\r\n  })\r\n}\r\n\r\nexport function successResponse(data) {\r\n  return jsonResponse({\r\n    success: true,\r\n    data\r\n  })\r\n}\r\n\r\nexport function errorResponse(message, status = 400) {\r\n  return jsonResponse({\r\n    success: false,\r\n    error: message\r\n  }, status)\r\n}\r\n\r\n", "// Cloudflare Email Routing API \u5BA2\u6237\u7AEF\r\n\r\nexport class CloudflareEmailRouting {\r\n  constructor(apiToken, accountId, zoneId) {\r\n    this.apiToken = apiToken\r\n    this.accountId = accountId\r\n    this.zoneId = zoneId\r\n    this.baseURL = 'https://api.cloudflare.com/client/v4'\r\n  }\r\n\r\n  async createRule(emailAddress, targetEmail) {\r\n    const url = `${this.baseURL}/zones/${this.zoneId}/email/routing/rules`\r\n    \r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${this.apiToken}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        matchers: [{\r\n          type: 'literal',\r\n          field: 'to',\r\n          value: emailAddress\r\n        }],\r\n        actions: [{\r\n          type: 'forward',\r\n          value: [targetEmail]\r\n        }],\r\n        enabled: true,\r\n        name: `TempEmail: ${emailAddress}`,\r\n        priority: 0\r\n      })\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    if (!data.success) {\r\n      throw new Error(data.errors?.[0]?.message || 'Failed to create email rule')\r\n    }\r\n\r\n    return data.result\r\n  }\r\n\r\n  async deleteRule(ruleId) {\r\n    const url = `${this.baseURL}/zones/${this.zoneId}/email/routing/rules/${ruleId}`\r\n    \r\n    const response = await fetch(url, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Authorization': `Bearer ${this.apiToken}`\r\n      }\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    if (!data.success) {\r\n      throw new Error(data.errors?.[0]?.message || 'Failed to delete email rule')\r\n    }\r\n\r\n    return data.result\r\n  }\r\n\r\n  async listRules() {\r\n    const url = `${this.baseURL}/zones/${this.zoneId}/email/routing/rules`\r\n    \r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'Authorization': `Bearer ${this.apiToken}`\r\n      }\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    if (!data.success) {\r\n      throw new Error(data.errors?.[0]?.message || 'Failed to list email rules')\r\n    }\r\n\r\n    return data.result\r\n  }\r\n\r\n  async getRule(ruleId) {\r\n    const url = `${this.baseURL}/zones/${this.zoneId}/email/routing/rules/${ruleId}`\r\n    \r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'Authorization': `Bearer ${this.apiToken}`\r\n      }\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    if (!data.success) {\r\n      throw new Error(data.errors?.[0]?.message || 'Failed to get email rule')\r\n    }\r\n\r\n    return data.result\r\n  }\r\n}\r\n\r\n// \u4ECE\u73AF\u5883\u53D8\u91CF\u83B7\u53D6 Cloudflare \u5BA2\u6237\u7AEF\r\nexport function getCloudflareClient(env) {\r\n  const apiToken = env.CLOUDFLARE_API_TOKEN\r\n  const accountId = env.CLOUDFLARE_ACCOUNT_ID\r\n  const zoneId = env.CLOUDFLARE_ZONE_ID\r\n\r\n  if (!apiToken || !zoneId) {\r\n    throw new Error('Cloudflare credentials not configured')\r\n  }\r\n\r\n  return new CloudflareEmailRouting(apiToken, accountId, zoneId)\r\n}\r\n\r\n", "import { successResponse, errorResponse } from '../utils/cors'\r\nimport { getCloudflareClient } from '../services/cloudflare'\r\n\r\n// \u751F\u6210\u90AE\u7BB1\u5730\u5740\uFF08\u652F\u6301\u81EA\u5B9A\u4E49\u524D\u7F00\uFF09\r\nfunction generateEmailWithPrefix(domain, prefix) {\r\n  const chars = 'abcdefghijklmnopqrstuvwxyz0123456789'\r\n  let base = (prefix && typeof prefix === 'string' ? prefix.trim() : '') || 'temp'\r\n  // \u6E05\u7406\u975E\u6CD5\u5B57\u7B26\uFF0C\u53EA\u4FDD\u7559\u5B57\u6BCD\u6570\u5B57\u548C\u4E0B\u5212\u7EBF\r\n  base = base.toLowerCase().replace(/[^a-z0-9_]/g, '')\r\n  if (!base) base = 'temp'\r\n\r\n  let username = base + '_'\r\n  for (let i = 0; i < 10; i++) {\r\n    username += chars.charAt(Math.floor(Math.random() * chars.length))\r\n  }\r\n  return `${username}@${domain}`\r\n}\r\n\r\nexport default async function emailRoutes(request, env, ctx) {\r\n  const url = new URL(request.url)\r\n  const path = url.pathname\r\n  const method = request.method\r\n\r\n  // POST /create - \u521B\u5EFA\u4E34\u65F6\u90AE\u7BB1\uFF08\u53EF\u5E26 prefix\uFF09\r\n  if (path === '/create' && method === 'POST') {\r\n    try {\r\n      const domain = env.DOMAIN_NAME || 'yourdomain.com'\r\n      const targetEmail = env.TARGET_EMAIL || await getTargetEmail(env)\r\n      \r\n      if (!targetEmail) {\r\n        return errorResponse('Target email not configured', 400)\r\n      }\r\n\r\n      let prefix = undefined\r\n      try {\r\n        const body = await request.json().catch(() => null)\r\n        if (body && body.prefix) prefix = body.prefix\r\n      } catch (_) {}\r\n\r\n      // \u751F\u6210\u90AE\u7BB1\u5730\u5740\r\n      const emailAddress = generateEmailWithPrefix(domain, prefix)\r\n\r\n      // \u521B\u5EFA Cloudflare Email Routing \u89C4\u5219\r\n      let ruleId = null\r\n      try {\r\n        const cfClient = getCloudflareClient(env)\r\n        const rule = await cfClient.createRule(emailAddress, targetEmail)\r\n        ruleId = rule.id\r\n      } catch (error) {\r\n        console.error('Failed to create Cloudflare rule:', error)\r\n        // \u7EE7\u7EED\u6267\u884C\uFF0C\u5C06 rule_id \u8BBE\u4E3A null\r\n      }\r\n\r\n      // \u4FDD\u5B58\u5230\u6570\u636E\u5E93\r\n      const result = await env.DB.prepare(`\r\n        INSERT INTO temp_emails (email, cloudflare_rule_id, target_email, status)\r\n        VALUES (?, ?, ?, 'active')\r\n      `).bind(emailAddress, ruleId, targetEmail).run()\r\n\r\n      const emailId = result.meta.last_row_id\r\n\r\n      return successResponse({\r\n        id: emailId,\r\n        email: emailAddress,\r\n        created_at: new Date().toISOString(),\r\n        copied: true\r\n      })\r\n    } catch (error) {\r\n      console.error('Create email error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  // GET /list - \u83B7\u53D6\u90AE\u7BB1\u5217\u8868\r\n  if (path === '/list' && method === 'GET') {\r\n    try {\r\n      const result = await env.DB.prepare(`\r\n        SELECT \r\n          id, \r\n          email, \r\n          created_at, \r\n          last_received_at,\r\n          message_count,\r\n          status\r\n        FROM temp_emails\r\n        WHERE status = 'active'\r\n        ORDER BY created_at DESC\r\n      `).all()\r\n\r\n      return successResponse(result.results || [])\r\n    } catch (error) {\r\n      console.error('List emails error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  // DELETE /:id - \u5220\u9664\u90AE\u7BB1\r\n  if (path.match(/^\\/\\d+$/) && method === 'DELETE') {\r\n    try {\r\n      const id = parseInt(path.slice(1))\r\n\r\n      // \u83B7\u53D6\u90AE\u7BB1\u4FE1\u606F\r\n      const email = await env.DB.prepare(`\r\n        SELECT * FROM temp_emails WHERE id = ?\r\n      `).bind(id).first()\r\n\r\n      if (!email) {\r\n        return errorResponse('Email not found', 404)\r\n      }\r\n\r\n      // \u5220\u9664 Cloudflare \u89C4\u5219\r\n      if (email.cloudflare_rule_id) {\r\n        try {\r\n          const cfClient = getCloudflareClient(env)\r\n          await cfClient.deleteRule(email.cloudflare_rule_id)\r\n        } catch (error) {\r\n          console.error('Failed to delete Cloudflare rule:', error)\r\n        }\r\n      }\r\n\r\n      // \u5220\u9664\u6570\u636E\u5E93\u8BB0\u5F55\r\n      await env.DB.prepare(`\r\n        DELETE FROM temp_emails WHERE id = ?\r\n      `).bind(id).run()\r\n\r\n      // \u5220\u9664\u76F8\u5173\u90AE\u4EF6\r\n      await env.DB.prepare(`\r\n        DELETE FROM messages WHERE temp_email_id = ?\r\n      `).bind(id).run()\r\n\r\n      return successResponse({ deleted: true })\r\n    } catch (error) {\r\n      console.error('Delete email error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  // POST /batch-delete - \u6279\u91CF\u5220\u9664\r\n  if (path === '/batch-delete' && method === 'POST') {\r\n    try {\r\n      const body = await request.json()\r\n      const ids = body.ids || []\r\n\r\n      if (!Array.isArray(ids) || ids.length === 0) {\r\n        return errorResponse('Invalid ids parameter', 400)\r\n      }\r\n\r\n      let deletedCount = 0\r\n\r\n      for (const id of ids) {\r\n        try {\r\n          // \u83B7\u53D6\u90AE\u7BB1\u4FE1\u606F\r\n          const email = await env.DB.prepare(`\r\n            SELECT * FROM temp_emails WHERE id = ?\r\n          `).bind(id).first()\r\n\r\n          if (email) {\r\n            // \u5220\u9664 Cloudflare \u89C4\u5219\r\n            if (email.cloudflare_rule_id) {\r\n              try {\r\n                const cfClient = getCloudflareClient(env)\r\n                await cfClient.deleteRule(email.cloudflare_rule_id)\r\n              } catch (error) {\r\n                console.error('Failed to delete Cloudflare rule:', error)\r\n              }\r\n            }\r\n\r\n            // \u5220\u9664\u6570\u636E\u5E93\u8BB0\u5F55\r\n            await env.DB.prepare(`\r\n              DELETE FROM temp_emails WHERE id = ?\r\n            `).bind(id).run()\r\n\r\n            await env.DB.prepare(`\r\n              DELETE FROM messages WHERE temp_email_id = ?\r\n            `).bind(id).run()\r\n\r\n            deletedCount++\r\n          }\r\n        } catch (error) {\r\n          console.error(`Failed to delete email ${id}:`, error)\r\n        }\r\n      }\r\n\r\n      return successResponse({ deleted_count: deletedCount })\r\n    } catch (error) {\r\n      console.error('Batch delete error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  return errorResponse('Not found', 404)\r\n}\r\n\r\n// \u4ECE\u914D\u7F6E\u4E2D\u83B7\u53D6\u76EE\u6807\u90AE\u7BB1\r\nasync function getTargetEmail(env) {\r\n  try {\r\n    const config = await env.DB.prepare(`\r\n      SELECT config_value FROM config WHERE config_key = 'target_qq_email'\r\n    `).first()\r\n    \r\n    return config?.config_value || null\r\n  } catch (error) {\r\n    console.error('Failed to get target email:', error)\r\n    return null\r\n  }\r\n}\r\n\r\n", "import { successResponse, errorResponse } from '../utils/cors'\r\n\r\nexport default async function messageRoutes(request, env, ctx) {\r\n  const url = new URL(request.url)\r\n  const path = url.pathname\r\n  const method = request.method\r\n\r\n  // GET /emails/:id/messages - \u83B7\u53D6\u90AE\u4EF6\u5217\u8868\r\n  if (path.match(/^\\/emails\\/\\d+\\/messages$/) && method === 'GET') {\r\n    try {\r\n      const emailId = parseInt(path.split('/')[2])\r\n      const page = parseInt(url.searchParams.get('page') || '1')\r\n      const limit = parseInt(url.searchParams.get('limit') || '20')\r\n      const offset = (page - 1) * limit\r\n\r\n      // \u83B7\u53D6\u603B\u6570\r\n      const countResult = await env.DB.prepare(`\r\n        SELECT COUNT(*) as total FROM messages WHERE temp_email_id = ?\r\n      `).bind(emailId).first()\r\n\r\n      const total = countResult?.total || 0\r\n\r\n      // \u83B7\u53D6\u90AE\u4EF6\u5217\u8868\r\n      const result = await env.DB.prepare(`\r\n        SELECT \r\n          id,\r\n          sender,\r\n          subject,\r\n          body_text,\r\n          verification_code,\r\n          received_at,\r\n          is_read,\r\n          created_at\r\n        FROM messages\r\n        WHERE temp_email_id = ?\r\n        ORDER BY received_at DESC\r\n        LIMIT ? OFFSET ?\r\n      `).bind(emailId, limit, offset).all()\r\n\r\n      return successResponse({\r\n        messages: result.results || [],\r\n        pagination: {\r\n          page,\r\n          limit,\r\n          total,\r\n          total_pages: Math.ceil(total / limit)\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.error('List messages error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  // GET /:id - \u83B7\u53D6\u90AE\u4EF6\u8BE6\u60C5\r\n  if (path.match(/^\\/\\d+$/) && method === 'GET') {\r\n    try {\r\n      const id = parseInt(path.slice(1))\r\n\r\n      const message = await env.DB.prepare(`\r\n        SELECT * FROM messages WHERE id = ?\r\n      `).bind(id).first()\r\n\r\n      if (!message) {\r\n        return errorResponse('Message not found', 404)\r\n      }\r\n\r\n      return successResponse(message)\r\n    } catch (error) {\r\n      console.error('Get message error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  // PUT /:id/read - \u6807\u8BB0\u4E3A\u5DF2\u8BFB\r\n  if (path.match(/^\\/\\d+\\/read$/) && method === 'PUT') {\r\n    try {\r\n      const id = parseInt(path.split('/')[1])\r\n\r\n      await env.DB.prepare(`\r\n        UPDATE messages SET is_read = 1 WHERE id = ?\r\n      `).bind(id).run()\r\n\r\n      return successResponse({ updated: true })\r\n    } catch (error) {\r\n      console.error('Mark as read error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  return errorResponse('Not found', 404)\r\n}\r\n\r\n", "import { successResponse, errorResponse } from '../utils/cors'\r\n\r\nexport default async function monitorRoutes(request, env, ctx) {\r\n  const url = new URL(request.url)\r\n  const path = url.pathname\r\n  const method = request.method\r\n\r\n  // GET /status - \u83B7\u53D6\u76D1\u63A7\u72B6\u6001\r\n  if (path === '/status' && method === 'GET') {\r\n    try {\r\n      // \u83B7\u53D6\u76D1\u63A7\u72B6\u6001\u914D\u7F6E\r\n      const statusConfig = await env.DB.prepare(`\r\n        SELECT config_value FROM config WHERE config_key = 'monitor_status'\r\n      `).first()\r\n\r\n      const lastCheckConfig = await env.DB.prepare(`\r\n        SELECT config_value FROM config WHERE config_key = 'last_check_time'\r\n      `).first()\r\n\r\n      // \u7EDF\u8BA1\u6570\u636E\r\n      const emailCount = await env.DB.prepare(`\r\n        SELECT COUNT(*) as count FROM temp_emails WHERE status = 'active'\r\n      `).first()\r\n\r\n      const messageCount = await env.DB.prepare(`\r\n        SELECT COUNT(*) as count FROM messages\r\n      `).first()\r\n\r\n      const codeCount = await env.DB.prepare(`\r\n        SELECT COUNT(*) as count FROM messages WHERE verification_code IS NOT NULL\r\n      `).first()\r\n\r\n      return successResponse({\r\n        status: statusConfig?.config_value || 'stopped',\r\n        last_check_at: lastCheckConfig?.config_value || null,\r\n        total_emails: emailCount?.count || 0,\r\n        total_messages: messageCount?.count || 0,\r\n        verification_codes_extracted: codeCount?.count || 0\r\n      })\r\n    } catch (error) {\r\n      console.error('Get monitor status error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  // POST /toggle - \u542F\u52A8/\u505C\u6B62\u76D1\u63A7\r\n  if (path === '/toggle' && method === 'POST') {\r\n    try {\r\n      const body = await request.json()\r\n      const action = body.action // 'start' or 'stop'\r\n\r\n      if (!['start', 'stop'].includes(action)) {\r\n        return errorResponse('Invalid action. Must be \"start\" or \"stop\"', 400)\r\n      }\r\n\r\n      const newStatus = action === 'start' ? 'running' : 'stopped'\r\n\r\n      // \u66F4\u65B0\u914D\u7F6E\r\n      await env.DB.prepare(`\r\n        INSERT OR REPLACE INTO config (config_key, config_value, updated_at)\r\n        VALUES ('monitor_status', ?, datetime('now'))\r\n      `).bind(newStatus).run()\r\n\r\n      if (action === 'start') {\r\n        // \u66F4\u65B0\u6700\u540E\u68C0\u67E5\u65F6\u95F4\r\n        await env.DB.prepare(`\r\n          INSERT OR REPLACE INTO config (config_key, config_value, updated_at)\r\n          VALUES ('last_check_time', ?, datetime('now'))\r\n        `).bind(new Date().toISOString()).run()\r\n      }\r\n\r\n      return successResponse({\r\n        status: newStatus\r\n      })\r\n    } catch (error) {\r\n      console.error('Toggle monitor error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  return errorResponse('Not found', 404)\r\n}\r\n\r\n", "import { successResponse, errorResponse } from '../utils/cors'\r\n\r\nexport default async function configRoutes(request, env, ctx) {\r\n  const url = new URL(request.url)\r\n  const path = url.pathname\r\n  const method = request.method\r\n\r\n  // GET / - \u83B7\u53D6\u914D\u7F6E\r\n  if (path === '/' && method === 'GET') {\r\n    try {\r\n      const configs = await env.DB.prepare(`\r\n        SELECT config_key, config_value FROM config\r\n      `).all()\r\n\r\n      const configMap = {}\r\n      for (const config of configs.results || []) {\r\n        // \u9690\u85CF\u654F\u611F\u4FE1\u606F\r\n        if (config.config_key.includes('password') || config.config_key.includes('token')) {\r\n          configMap[config.config_key] = config.config_value ? '***' : ''\r\n        } else if (config.config_key === 'target_qq_email') {\r\n          // \u90E8\u5206\u9690\u85CF\u90AE\u7BB1\r\n          const email = config.config_value || ''\r\n          const parts = email.split('@')\r\n          if (parts.length === 2) {\r\n            const username = parts[0]\r\n            const masked = username.substring(0, 3) + '***'\r\n            configMap[config.config_key] = masked + '@' + parts[1]\r\n          } else {\r\n            configMap[config.config_key] = email\r\n          }\r\n        } else {\r\n          configMap[config.config_key] = config.config_value\r\n        }\r\n      }\r\n\r\n      return successResponse(configMap)\r\n    } catch (error) {\r\n      console.error('Get config error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  // PUT / - \u66F4\u65B0\u914D\u7F6E\r\n  if (path === '/' && method === 'PUT') {\r\n    try {\r\n      const body = await request.json()\r\n\r\n      // \u5141\u8BB8\u66F4\u65B0\u7684\u914D\u7F6E\u9879\r\n      const allowedKeys = [\r\n        'cloudflare_api_token',\r\n        'cloudflare_account_id',\r\n        'cloudflare_zone_id',\r\n        'domain_name',\r\n        'target_qq_email',\r\n        'qq_imap_password',\r\n        'monitor_interval',\r\n        'auto_delete_days'\r\n      ]\r\n\r\n      for (const [key, value] of Object.entries(body)) {\r\n        if (allowedKeys.includes(key)) {\r\n          await env.DB.prepare(`\r\n            INSERT OR REPLACE INTO config (config_key, config_value, updated_at)\r\n            VALUES (?, ?, datetime('now'))\r\n          `).bind(key, value).run()\r\n        }\r\n      }\r\n\r\n      return successResponse({ updated: true })\r\n    } catch (error) {\r\n      console.error('Update config error:', error)\r\n      return errorResponse(error.message)\r\n    }\r\n  }\r\n\r\n  return errorResponse('Not found', 404)\r\n}\r\n\r\n", "import { Router } from './router'\r\nimport { corsHeaders } from './utils/cors'\r\nimport emailRoutes from './routes/email'\r\nimport messageRoutes from './routes/message'\r\nimport monitorRoutes from './routes/monitor'\r\nimport configRoutes from './routes/config'\r\n\r\nexport default {\r\n  async fetch(request, env, ctx) {\r\n    // \u5904\u7406 CORS \u9884\u68C0\u8BF7\u6C42\r\n    if (request.method === 'OPTIONS') {\r\n      return new Response(null, { headers: corsHeaders })\r\n    }\r\n\r\n    const router = new Router()\r\n\r\n    // \u6CE8\u518C\u8DEF\u7531\r\n    router.use('/api/emails', emailRoutes)\r\n    router.use('/api/messages', messageRoutes)\r\n    router.use('/api/monitor', monitorRoutes)\r\n    router.use('/api/config', configRoutes)\r\n\r\n    // WebSocket \u5904\u7406\r\n    if (request.headers.get('Upgrade') === 'websocket') {\r\n      return handleWebSocket(request, env)\r\n    }\r\n\r\n    try {\r\n      const response = await router.handle(request, env, ctx)\r\n      \r\n      // \u6DFB\u52A0 CORS \u5934\r\n      const headers = new Headers(response.headers)\r\n      Object.entries(corsHeaders).forEach(([key, value]) => {\r\n        headers.set(key, value)\r\n      })\r\n\r\n      return new Response(response.body, {\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        headers\r\n      })\r\n    } catch (error) {\r\n      console.error('Request error:', error)\r\n      return new Response(\r\n        JSON.stringify({\r\n          success: false,\r\n          error: error.message || 'Internal Server Error'\r\n        }),\r\n        {\r\n          status: 500,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            ...corsHeaders\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n// WebSocket \u5904\u7406\r\nfunction handleWebSocket(request, env) {\r\n  // \u4F7F\u7528 Durable Objects \u5904\u7406 WebSocket\r\n  const upgradeHeader = request.headers.get('Upgrade')\r\n  if (upgradeHeader !== 'websocket') {\r\n    return new Response('Expected Upgrade: websocket', { status: 426 })\r\n  }\r\n\r\n  // \u8FD9\u91CC\u7B80\u5316\u5904\u7406\uFF0C\u5B9E\u9645\u4F7F\u7528\u9700\u8981 Durable Objects\r\n  const pair = new WebSocketPair()\r\n  const [client, server] = Object.values(pair)\r\n\r\n  // \u63A5\u53D7 WebSocket \u8FDE\u63A5\r\n  server.accept()\r\n\r\n  // \u53D1\u9001\u6B22\u8FCE\u6D88\u606F\r\n  server.send(JSON.stringify({\r\n    type: 'connected',\r\n    message: 'WebSocket connected'\r\n  }))\r\n\r\n  // \u5904\u7406\u6D88\u606F\r\n  server.addEventListener('message', event => {\r\n    try {\r\n      const data = JSON.parse(event.data)\r\n      console.log('WebSocket message received:', data)\r\n\r\n      if (data.type === 'ping') {\r\n        server.send(JSON.stringify({ type: 'pong' }))\r\n      }\r\n    } catch (error) {\r\n      console.error('WebSocket message error:', error)\r\n    }\r\n  })\r\n\r\n  server.addEventListener('close', () => {\r\n    console.log('WebSocket closed')\r\n  })\r\n\r\n  return new Response(null, {\r\n    status: 101,\r\n    webSocket: client\r\n  })\r\n}\r\n\r\n// Durable Object for WebSocket (\u9AD8\u7EA7\u529F\u80FD)\r\nexport class WebSocketDurableObject {\r\n  constructor(state, env) {\r\n    this.state = state\r\n    this.env = env\r\n    this.sessions = []\r\n  }\r\n\r\n  async fetch(request) {\r\n    const pair = new WebSocketPair()\r\n    const [client, server] = Object.values(pair)\r\n\r\n    server.accept()\r\n    this.sessions.push(server)\r\n\r\n    server.addEventListener('close', () => {\r\n      this.sessions = this.sessions.filter(s => s !== server)\r\n    })\r\n\r\n    return new Response(null, {\r\n      status: 101,\r\n      webSocket: client\r\n    })\r\n  }\r\n\r\n  // \u5E7F\u64AD\u6D88\u606F\u7ED9\u6240\u6709\u8FDE\u63A5\r\n  broadcast(message) {\r\n    const data = JSON.stringify(message)\r\n    this.sessions.forEach(session => {\r\n      try {\r\n        session.send(data)\r\n      } catch (error) {\r\n        console.error('Broadcast error:', error)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\src\\\\index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\src\\\\index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-h3ULUv\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-h3ULUv\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"E:\\\\\u684C\u9762\\\\tempemail\\\\workers\\\\.wrangler\\\\tmp\\\\bundle-h3ULUv\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
